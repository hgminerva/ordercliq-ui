{"version":3,"sources":["./src/app/software-buyer-order/confirm-order/confirm-order.component.ts","./src/app/software-buyer-order/confirm-order/confirm-order.component.html","./src/app/software-buyer-order/confirm-order/confirm-order.service.ts","./src/app/software-buyer-order/create-order/create-order.component.ts","./src/app/software-buyer-order/create-order/create-order.component.html","./src/app/software-buyer-order/create-order/create-order.service.ts","./src/app/software-buyer-order/software-buyer-oder.router.activate.ts","./src/app/software-buyer-order/software-buyer-order-routing.module.ts","./src/app/software-buyer-order/software-buyer-order.component.ts","./src/app/software-buyer-order/software-buyer-order.component.html","./src/app/software-buyer-order/software-buyer-order.module.ts"],"names":[],"mappings":"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","file":"software-buyer-order-software-buyer-order-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\nimport { ConfirmOrderService } from './confirm-order.service';\n\nimport { ConfirmOrderModel } from './confirm-order-model';\n\n@Component({\n  selector: 'app-confirm-order',\n  templateUrl: './confirm-order.component.html',\n  styleUrls: ['./confirm-order.component.css']\n})\nexport class ConfirmOrderComponent implements OnInit {\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public confirmOrderService: ConfirmOrderService\n  ) { }\n\n  public confirmOrderDetailSubscription: any;\n  public confirmOrderModel: ConfirmOrderModel = {\n    Id: 0,\n    OrderNumber: \"\",\n    OrderDate: \"\",\n    ProductCode: \"\",\n    ProductManualCode: \"\",\n    ProductDescription: \"\",\n    Remarks: \"\",\n    ProductPrice: 0,\n    Quantity: 0,\n    Amount: 0,\n    SellerUserName: \"\",\n    SellerFullName: \"\",\n    BuyerUserName: \"\",\n    BuyerFullName: \"\",\n    BuyerAddress: \"\",\n    BuyerContactNumber: \"\",\n    Status: \"\",\n  };\n\n  public confirmOrderSpinnerHidden: boolean = false;\n  public confirmOrderSpinnerContentHidden: boolean = true;\n\n  public confirmOrderDetail(): void {\n    let id: number = parseInt(this.activatedRoute.snapshot.paramMap.get('id'));\n\n    this.confirmOrderService.detaiConfirmOrder(id);\n    this.confirmOrderDetailSubscription = this.confirmOrderService.detailConfirmOrderObservable.subscribe(\n      data => {\n        if (data != null) {\n          this.confirmOrderModel = {\n            Id: data.Id,\n            OrderNumber: data.OrderNumber,\n            OrderDate: data.OrderDate,\n            ProductCode: data.ProductCode,\n            ProductManualCode: data.ProductManualCode,\n            ProductDescription: data.ProductDescription,\n            Remarks: data.Remarks,\n            ProductPrice: data.ProductPrice,\n            Quantity: data.Quantity,\n            Amount: data.Amount,\n            SellerUserName: data.SellerUserName,\n            SellerFullName: data.SellerFullName,\n            BuyerUserName: data.BuyerUserName,\n            BuyerFullName: data.BuyerFullName,\n            BuyerAddress: data.BuyerAddress,\n            BuyerContactNumber: data.BuyerContactNumber,\n            Status: data.Status\n          };\n        }\n          \n        this.confirmOrderSpinnerHidden = true;\n        this.confirmOrderSpinnerContentHidden = false;\n\n        if (this.confirmOrderDetailSubscription != null) this.confirmOrderDetailSubscription.unsubscribe();\n      }\n    );\n  }\n\n\n  ngOnInit(): void {\n    this.confirmOrderDetail();\n  }\n\n  ngOnDestroy() {\n    if (this.confirmOrderDetailSubscription != null) this.confirmOrderDetailSubscription.unsubscribe();\n  }\n}\n","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/order.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Confirm Order</span>\n</mat-toolbar>\n<div class=\"software-container\">\n    <div [hidden]=\"confirmOrderSpinnerHidden\">\n        <div style=\"width: 100%; text-align: center;\">\n            Please wait...\n        </div>\n        <br />\n        <mat-spinner class=\"spinner-center\"></mat-spinner>\n    </div>\n    <div [hidden]=\"confirmOrderSpinnerContentHidden\">\n        <div style=\"width: 100%; text-align: center;\">\n            <h1>Thank you!</h1>\n        </div>\n\n        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n            <div fxFlex=\"15\" style=\"margin: 5px;\"></div>\n            <div fxFlex=\"70\" style=\"margin: 5px;\">\n                <mat-card>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n                            <p style=\"font-size: 15px;\">\n                                <b>Order Number</b>\n                                <br />\n                                <span> {{confirmOrderModel.OrderNumber}}</span>\n                            </p>\n                        </div>\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n                            <p style=\"font-size: 15px;\">\n                                <b>Order Date</b>\n                                <br />\n                                <span> {{confirmOrderModel.OrderDate}}</span>\n                            </p>\n                        </div>\n                        <div fxFlex=\"50\" style=\"margin: 5px;\"></div>\n                    </div>\n                    <mat-divider></mat-divider>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"100\" style=\"margin: 5px; padding-top: 10px;\">\n                            <span>Product Details</span>\n                            <br />\n                            <br />\n                            <p style=\"font-size: 23px; font-weight: bold;\">\n                                <b>{{confirmOrderModel.ProductDescription}}</b></p>\n                            <p style=\"font-size: 17px; margin-top: -5px;\"><b>Product Code: </b> &nbsp;\n                                {{confirmOrderModel.ProductManualCode}}</p>\n                        </div>\n                    </div>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n                            <p style=\"font-size: 15px;\">\n                                <b>Price</b>\n                                <br />\n                                <span> ₱ {{confirmOrderModel.ProductPrice}}</span>\n                            </p>\n                        </div>\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n                            <p style=\"font-size: 15px;\">\n                                <b>Quantity</b>\n                                <br />\n                                <span> ₱ {{confirmOrderModel.Quantity}}</span>\n                            </p>\n                        </div>\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n                            <p style=\"font-size: 15px;\">\n                                <b>Amount</b>\n                                <br />\n                                <span> ₱ {{confirmOrderModel.Amount}}</span>\n                            </p>\n                        </div>\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n\n                        </div>\n                    </div>\n                    <mat-divider></mat-divider>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"100\" style=\"margin: 5px; padding-top: 10px;\">\n                            <span>Shipping information</span>\n                            <br />\n                            <br />\n                            <p style=\"font-size: 15px;\">\n                                <b>Address</b>\n                                <br />\n                                <span> {{confirmOrderModel.BuyerAddress}}</span>\n                            </p>\n                            <p style=\"font-size: 15px;\">\n                                <b>Contact Number</b>\n                                <br />\n                                <span> {{confirmOrderModel.BuyerContactNumber}}</span>\n                            </p>\n                        </div>\n                    </div>\n                    <mat-divider></mat-divider>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"100\" style=\"margin: 5px; padding-top: 10px;\">\n                            <span>Remarks and other information</span>\n                            <br />\n                            <p style=\"font-size: 15px;\">\n                                <br />\n                                <span> {{confirmOrderModel.Remarks}}</span>\n                            </p>\n                        </div>\n                    </div>\n                </mat-card>\n                <br />\n                <button routerLink=\"/software-buyer/order\" mat-flat-button color=\"primary\"\n                    style=\"width: 100%; font-size: 20px; padding: 10px;\">\n                    OK\n                </button>\n            </div>\n            <div fxFlex=\"15\" style=\"margin: 5px;\"></div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { ConfirmOrderModel } from './confirm-order-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmOrderService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public detailConfirmOrderSubject = new Subject<ConfirmOrderModel>();\n  public detailConfirmOrderObservable = this.detailConfirmOrderSubject.asObservable();\n\n  public detaiConfirmOrder(id: number): void {\n    let confirmOrderModel: ConfirmOrderModel = null;\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/detail/confirmOrder/\" + id, this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results != null) {\n          confirmOrderModel = {\n            Id: results[\"id\"],\n            OrderNumber: results[\"orderNumber\"],\n            ProductCode: results[\"productCode\"],\n            OrderDate: new Date(results[\"orderDate\"]).toLocaleDateString(\"fr-CA\"),\n            ProductManualCode: results[\"productManualCode\"],\n            ProductDescription: results[\"productDescription\"],\n            Remarks: results[\"remarks\"],\n            ProductPrice: results[\"productPrice\"],\n            Quantity: results[\"quantity\"],\n            Amount: results[\"amount\"],\n            SellerUserName: results[\"sellerUserName\"],\n            SellerFullName: results[\"sellerFullName\"],\n            BuyerUserName: results[\"buyerUserName\"],\n            BuyerFullName: results[\"buyerFullName\"],\n            BuyerAddress: results[\"buyerAddress\"],\n            BuyerContactNumber: results[\"buyerContactNumber\"],\n            Status: results[\"status\"]\n          }\n        }\n\n        this.detailConfirmOrderSubject.next(confirmOrderModel);\n      },\n      error => {\n        this.detailConfirmOrderSubject.next(null);\n      }\n    );\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Title, Meta } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\n\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { CreateOrderService } from './create-order.service';\nimport { CreateOrderProductModel } from './create-order-product-model';\nimport { CreateOrderLoginUserModel } from './create-order-login-user-model';\n\nimport { AppSettings } from './../../app-settings';\n\n@Component({\n  selector: 'app-create-order',\n  templateUrl: './create-order.component.html',\n  styleUrls: ['./create-order.component.css']\n})\nexport class CreateOrderComponent implements OnInit {\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public createOrderService: CreateOrderService,\n    public appSettings: AppSettings,\n    private snackBar: MatSnackBar,\n    private titleService: Title,\n    private metaService: Meta,\n    @Inject(DOCUMENT) private document: any\n  ) {\n\n  }\n\n  public price: string = \"0.00\";\n  public quantity: number = 1;\n  public amount: string = \"0.00\";\n\n  public loginUserDetailSubscription: any;\n  public loginUserModel: CreateOrderLoginUserModel = {\n    Id: 0,\n    UserType: \"\",\n    UserName: \"\",\n    Password: \"\",\n    FullName: \"\",\n    Address: \"\",\n    ContactNumber: \"\",\n    EmailAddress: \"\",\n    Status: \"\"\n  };\n\n  public productDetailSubscription: any;\n  public createOrderProductModel: CreateOrderProductModel = {\n    Id: 0,\n    ProductCode: \"\",\n    ProductManualCode: \"\",\n    ProductSKUCode: \"\",\n    ProductDescription: \"\",\n    Particulars: \"\",\n    ImageURL: \"\",\n    Price: 0,\n    SellerUserName: \"\",\n    SellerFullName: \"\",\n    Status: \"\",\n  };\n\n  public createOrderSpinnerHidden: boolean = false;\n  public productNotFoundHidden: boolean = true;\n  public createOrderSpinnerContentHidden: boolean = true;\n\n  public placeOrderSubscription: any;\n  public placeOrderRemarks: string = \"\";\n\n  public orderSpinnerStatus: string = \"Please wait...\";\n\n  public orderFormGroup: FormGroup;\n  public addressFormGroup: FormGroup;\n  public confirmFormGroup: FormGroup;\n\n  public isOrderFormGroupEditable: boolean = true;\n  public isAddressFormGroupEditable: boolean = true;\n  public isConfirmFormGroupEditable: boolean = true;\n\n  public buttonAddQuantityClick(): void {\n    this.quantity += 1;\n\n    this.computeAmount();\n  }\n\n  public buttonMinusQuantityClick(): void {\n    if (this.quantity > 1) {\n      this.quantity -= 1;\n    }\n\n    this.computeAmount();\n  }\n\n  public computeAmount(): void {\n    this.amount = (Math.round(this.createOrderProductModel.Price * this.quantity * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  public getLoginUserDetail(): void {\n    this.createOrderService.loginUser();\n    this.loginUserDetailSubscription = this.createOrderService.loginUserObservable.subscribe(\n      data => {\n        if (data != null) {\n          this.loginUserModel = {\n            Id: data.Id,\n            UserType: data.UserType,\n            UserName: data.UserName,\n            Password: data.Password,\n            FullName: data.FullName,\n            Address: data.Address,\n            ContactNumber: data.ContactNumber,\n            EmailAddress: data.EmailAddress,\n            Status: data.Status\n          };\n        }\n\n        if (this.loginUserDetailSubscription != null) this.loginUserDetailSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public getProductDetail(): void {\n    let productId = this.activatedRoute.snapshot.paramMap.get('productId');\n\n    this.createOrderService.detaiProduct(parseInt(productId));\n    this.productDetailSubscription = this.createOrderService.detailProductObservable.subscribe(\n      data => {\n        if (data != null) {\n          this.createOrderProductModel = {\n            Id: data.Id,\n            ProductCode: data.ProductCode,\n            ProductManualCode: data.ProductManualCode,\n            ProductSKUCode: data.ProductSKUCode,\n            ProductDescription: data.ProductDescription,\n            Particulars: data.Particulars,\n            ImageURL: data.ImageURL,\n            Price: data.Price,\n            SellerUserName: data.SellerUserName,\n            SellerFullName: data.SellerFullName,\n            Status: data.Status\n          };\n\n          this.price = (Math.round(data.Price * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n          this.amount = this.price;\n\n          this.titleService.setTitle(data.ProductDescription);\n          this.metaService.updateTag({ property: 'og:title', content: data.ProductDescription });\n          this.metaService.updateTag({ property: 'og:description', content: data.Particulars });\n          this.metaService.updateTag({ property: 'og:url', content: 'https://www.orderfolder.com/software-buyer-order/create-order/' + productId });\n          this.metaService.updateTag({ property: 'og:image', content: data.ImageURL });\n\n          this.createOrderSpinnerHidden = true;\n          this.createOrderSpinnerContentHidden = false;\n\n          this.getLoginUserDetail();\n        } else {\n          this.createOrderSpinnerHidden = true;\n          this.productNotFoundHidden = false;\n        }\n\n        if (this.productDetailSubscription != null) this.productDetailSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public buttonPlaceOrderClick(): void {\n    let productId: number = parseInt(this.activatedRoute.snapshot.paramMap.get('productId'));\n\n    let buttonPlaceOrder: Element = document.getElementById(\"buttonPlaceOrder\");\n    buttonPlaceOrder.setAttribute(\"disabled\", \"disabled\");\n\n    let orderData = {\n      Remarks: this.placeOrderRemarks,\n      Quantity: this.quantity,\n      BuyerAddress: this.loginUserModel.Address,\n      BuyerContactNumber: this.loginUserModel.ContactNumber\n    };\n\n    this.createOrderSpinnerHidden = false;\n    this.createOrderSpinnerContentHidden = true;\n\n    this.orderSpinnerStatus = \"Placing your order to the seller...\";\n\n    this.createOrderService.createOrder(productId, orderData);\n    this.placeOrderSubscription = this.createOrderService.createOrderObservable.subscribe(\n      data => {\n        if (data[0] == \"success\") {\n          let id = data[1];\n\n          setTimeout(() => {\n            this.router.navigate(['/software-buyer-order/confirm-order/' + id]);\n          }, 500);\n        } else if (data[0] == \"failed\") {\n          if (data[1] === \"Unauthorized\") {\n\n            window.location.href = \"/account/login/\" + productId;\n\n            // setTimeout(() => {\n            //   this.router.navigate(['/account/login/' + productId]);\n            // }, 500);\n          } else {\n            this.createOrderSpinnerHidden = true;\n            this.createOrderSpinnerContentHidden = false;\n            buttonPlaceOrder.removeAttribute(\"disabled\");\n\n            this.snackBar.open(data[1], '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"orange-snackbar\"]\n            });\n          }\n        }\n\n        if (this.placeOrderSubscription != null) this.placeOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.getProductDetail();\n  }\n\n  ngOnDestroy() {\n    if (this.productDetailSubscription != null) this.productDetailSubscription.unsubscribe();\n    if (this.loginUserDetailSubscription != null) this.loginUserDetailSubscription.unsubscribe();\n    if (this.placeOrderSubscription != null) this.placeOrderSubscription.unsubscribe();\n  }\n\n}\n","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/order.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Create Order</span>\n</mat-toolbar>\n<div [hidden]=\"createOrderSpinnerHidden\">\n    <div class=\"software-order-container\">\n        <div style=\"width: 100%; text-align: center;\">\n            {{orderSpinnerStatus}}\n        </div>\n        <br />\n        <mat-spinner class=\"spinner-center\"></mat-spinner>\n    </div>\n</div>\n<div [hidden]=\"productNotFoundHidden\">\n    <div class=\"software-order-container\">\n        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n            <div fxFlex=\"35\"></div>\n            <div fxFlex=\"30\">\n                <div style=\"width: 100%; text-align: center;\">\n                    <img src=\"./../../../assets/dashboard-icons/error-404.png\" style=\"width: 100%;\" />\n                </div>\n            </div>\n            <div fxFlex=\"35\"></div>\n        </div>\n        <div style=\"width: 100%; text-align: center; font-size: 30px;\">\n            <p>Sorry. The product is not available or not found in the server. </p>\n        </div>\n    </div>\n</div>\n<div [hidden]=\"createOrderSpinnerContentHidden\">\n    <mat-horizontal-stepper linear #stepper>\n        <mat-step [stepControl]=\"orderFormGroup\" [editable]=\"isOrderFormGroupEditable\">\n            <ng-template matStepLabel>Order</ng-template>\n            <div class=\"software-order-container\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"84\" style=\"margin: 5px;\">\n                        <mat-card>\n                            <mat-card-content>\n                                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                    <div fxFlex=\"34\" style=\"margin: 5px;\">\n                                        <img src=\"{{createOrderProductModel.ImageURL}}\" style=\"width: 100%;\" />\n                                    </div>\n                                    <div fxFlex=\"66\"\n                                        style=\"margin-top: 5px; margin-bottom: 5px; margin-left: 15px; margin-right: 15px;\">\n                                        <h1><b>{{createOrderProductModel.ProductDescription}}</b></h1>\n                                        <h3><b>Product Code: </b> &nbsp; {{createOrderProductModel.ProductManualCode}}\n                                        </h3>\n                                        <p style=\"font-size: 15px;\">\n                                            {{createOrderProductModel.Particulars}}\n                                        </p>\n                                        <p style=\"font-size: 15px;\">Sold by {{createOrderProductModel.SellerFullName}}\n                                        </p>\n                                        <h1>₱ {{price}}</h1>\n                                        <mat-list style=\"margin-left: -16px !important; margin-top: -10px;\">\n                                            <mat-list-item>\n                                                <button mat-stroked-button (click)=\"buttonAddQuantityClick()\">\n                                                    <mat-icon matSuffix>add</mat-icon>\n                                                </button>\n                                                <span style=\"font-size: 30px;\">\n                                                    &nbsp;\n                                                    {{quantity}}\n                                                    &nbsp;\n                                                </span>\n                                                <button mat-stroked-button (click)=\"buttonMinusQuantityClick()\">\n                                                    <mat-icon matSuffix>remove</mat-icon>\n                                                </button>\n                                            </mat-list-item>\n                                        </mat-list>\n                                        <br />\n                                        <h2>Total: &nbsp; ₱ {{amount}}</h2>\n                                    </div>\n                                </div>\n                            </mat-card-content>\n                        </mat-card>\n                    </div>\n                    <div fxFlex=\"16\" style=\"margin: 5px;\">\n                        <button mat-flat-button color=\"primary\" style=\"width: 100%; font-size: 20px; padding: 10px;\"\n                            id=\"buttonPlaceOrder\" matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </mat-step>\n        <mat-step [stepControl]=\"addressFormGroup\" [editable]=\"isAddressFormGroupEditable\">\n            <ng-template matStepLabel>Address</ng-template>\n            <div class=\"software-order-container\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"84\" style=\"margin: 5px;\">\n                        <mat-card>\n                            <mat-card-content>\n                                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                    <div fxFlex=\"50\">\n                                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                            <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                                    <mat-label>Complete Address</mat-label>\n                                                    <textarea [(ngModel)]=\"loginUserModel.Address\"\n                                                        [ngModelOptions]=\"{standalone: true}\" matInput\n                                                        #text_compelete_address maxlength=\"1000\"\n                                                        placeholder=\"eg., House/Bldg No., Street, Barangay, City, Country and Postal Code\"\n                                                        rows=\"7\"></textarea>\n                                                    <mat-icon matSuffix>edit_location</mat-icon>\n                                                    <mat-hint align=\"end\">{{text_compelete_address.value.length}} / 1000\n                                                    </mat-hint>\n                                                </mat-form-field>\n                                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                                    <mat-label>Contact Number</mat-label>\n                                                    <input [(ngModel)]=\"loginUserModel.ContactNumber\"\n                                                        [ngModelOptions]=\"{standalone: true}\" matInput\n                                                        #text_contact_number maxlength=\"1000\"\n                                                        placeholder=\"(+63) 9569863933\" />\n                                                    <mat-icon matSuffix>phone</mat-icon>\n                                                    <mat-hint align=\"end\">{{text_contact_number.value.length}} / 1000\n                                                    </mat-hint>\n                                                </mat-form-field>\n                                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                                    <mat-label>Email Address</mat-label>\n                                                    <input [(ngModel)]=\"loginUserModel.EmailAddress\"\n                                                        [ngModelOptions]=\"{standalone: true}\" matInput\n                                                        #text_email_address maxlength=\"1000\"\n                                                        placeholder=\"(+63) 9569863933\" />\n                                                    <mat-icon matSuffix>email</mat-icon>\n                                                    <mat-hint align=\"end\">{{text_email_address.value.length}} / 1000\n                                                    </mat-hint>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div fxFlex=\"50\">\n                                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                            <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                                    <mat-label>Remarks (Optional): Notes to the seller. Eg., No onions.\n                                                    </mat-label>\n                                                    <input [(ngModel)]=\"placeOrderRemarks\"\n                                                        [ngModelOptions]=\"{standalone: true}\" matInput #text_Remarks\n                                                        maxlength=\"1000\"\n                                                        placeholder=\"Remarks (Optional): Notes to the seller. Eg., No onions.\" />\n                                                    <mat-icon matSuffix>edit</mat-icon>\n                                                    <mat-hint align=\"end\">{{text_Remarks.value.length}} / 1000\n                                                    </mat-hint>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </mat-card-content>\n                        </mat-card>\n                    </div>\n                    <div fxFlex=\"16\" style=\"margin: 5px;\">\n                        <button mat-stroked-button color=\"primary\"\n                            style=\"width: 100%; font-size: 20px; padding: 10px; margin-bottom: 5px;\"\n                            id=\"buttonPlaceOrder\" matStepperPrevious>\n                            Back\n                        </button>\n                        <button mat-flat-button color=\"primary\" style=\"width: 100%; font-size: 20px; padding: 10px;\"\n                            id=\"buttonPlaceOrder\" matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </div>\n                <br />\n            </div>\n        </mat-step>\n        <mat-step [stepControl]=\"confirmFormGroup\" [editable]=\"isConfirmFormGroupEditable\">\n            <ng-template matStepLabel>Confirm</ng-template>\n            <div class=\"software-order-container\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"84\" style=\"margin: 5px;\">\n                        <mat-card>\n                            <mat-card-content>\n                                <span>Product details</span>\n                                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                        <br />\n                                        <h2><b>{{createOrderProductModel.ProductDescription}}</b></h2>\n                                        <p style=\"margin-top: -10px;\">\n                                            <b>Code:</b> &nbsp; {{createOrderProductModel.ProductManualCode}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                    <div fxFlex=\"30\" style=\"margin: 5px;\">\n                                        <p style=\"font-size: 15px;\">\n                                            <b>Price</b>\n                                            <br />\n                                            <span>₱ {{price}}</span>\n                                        </p>\n                                    </div>\n                                    <div fxFlex=\"30\" style=\"margin: 5px;\">\n                                        <p style=\"font-size: 15px;\">\n                                            <b>Quantity</b>\n                                            <br />\n                                            <span>{{quantity}}</span>\n                                        </p>\n                                    </div>\n                                    <div fxFlex=\"30\" style=\"margin: 5px;\">\n                                        <p style=\"font-size: 15px;\">\n                                            <b>Amount</b>\n                                            <br />\n                                            <span>₱ {{amount}}</span>\n                                        </p>\n                                    </div>\n                                    <div fxFlex=\"10\" style=\"margin: 5px;\"></div>\n                                </div>\n                                <mat-divider></mat-divider>\n                                <br />\n                                <span>Shipping information</span>\n                                <br />\n                                <br />\n                                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                        <p style=\"font-size: 15px;\">\n                                            <b>Address</b>\n                                            <br />\n                                            <span> {{loginUserModel.Address}}</span>\n                                        </p>\n                                        <p style=\"font-size: 15px;\">\n                                            <b>Contact Number</b>\n                                            <br />\n                                            <span> {{loginUserModel.ContactNumber}}</span>\n                                        </p>\n                                    </div>\n                                </div>\n                                <mat-divider></mat-divider>\n                                <br />\n                                <span>Remarks and other information</span>\n                                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                        <br />\n                                        {{placeOrderRemarks}}\n                                    </div>\n                                </div>\n                                <br />\n                            </mat-card-content>\n                        </mat-card>\n                    </div>\n                    <div fxFlex=\"16\" style=\"margin: 5px;\">\n                        <button mat-stroked-button color=\"primary\"\n                            style=\"width: 100%; font-size: 20px; padding: 10px; margin-bottom: 5px;\"\n                            id=\"buttonPlaceOrder\" matStepperPrevious>\n                            Back\n                        </button>\n                        <button mat-flat-button color=\"accent\" style=\"width: 100%; font-size: 20px; padding: 10px;\"\n                            id=\"buttonPlaceOrder\" (click)=\"buttonPlaceOrderClick()\" matStepperNext>\n                            Place Order\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </mat-step>\n    </mat-horizontal-stepper>\n</div>","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { CreateOrderProductModel } from './create-order-product-model';\nimport { CreateOrderLoginUserModel } from './create-order-login-user-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateOrderService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public createOrderSubject = new Subject<string[]>();\n  public createOrderObservable = this.createOrderSubject.asObservable();\n  public loginUsertSubject = new Subject<CreateOrderLoginUserModel>();\n  public loginUserObservable = this.loginUsertSubject.asObservable();\n  public detailProductSubject = new Subject<CreateOrderProductModel>();\n  public detailProductObservable = this.detailProductSubject.asObservable();\n\n  public createOrder(productId: number, orderObjects: any): void {\n    let orderData = {\n      OrderNumber: \"0000000000\",\n      OrderDate: new Date(),\n      ProductCode: \"0000000000\",\n      ProductManualCode: \"0000000000\",\n      ProductSKUCode: \"0000000000\",\n      ProductDescription: \"NA\",\n      Remarks: orderObjects.Remarks,\n      ProductPrice: 0,\n      Quantity: orderObjects.Quantity,\n      Amount: 0,\n      SellerUserName: \"NA\",\n      SellerFullName: \"NA\",\n      BuyerUserName: \"NA\",\n      BuyerFullName: \"NA\",\n      BuyerAddress: orderObjects.BuyerAddress,\n      BuyerContactNumber: orderObjects.BuyerContactNumber,\n      Status: \"Open\",\n    };\n\n    this.httpClient.post(this.defaultAPIURLHost + \"/api/TrnOrder/createOrder/\" + productId, JSON.stringify(orderData), this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", response[\"id\"]];\n        this.createOrderSubject.next(responseResults);\n      },\n      error => {\n        let errorMessage = \"\";\n\n        console.log(error);\n\n        if (error.error != null) {\n          if (error.error.errors != null) {\n            for (var errorField in error.error.errors) {\n              if (errorField != null) {\n                for (let i = 0; i < error.error.errors[errorField].length; i++) {\n                  errorMessage = error.error.errors[errorField][i];\n                  break;\n                }\n              }\n            }\n          } else {\n            errorMessage = error[\"error\"];\n          }\n        } else {\n          errorMessage = error[\"error\"];\n        }\n\n        if (error.status === 401) {\n          errorMessage = \"Unauthorized\"\n        }\n\n        let errorResults: string[] = [\"failed\", errorMessage];\n        this.createOrderSubject.next(errorResults);\n      }\n    );\n  }\n\n  public loginUser(): void {\n    let loginUserModel: CreateOrderLoginUserModel = null;\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstUser/loginUser\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results != null) {\n          loginUserModel = {\n            Id: results[\"id\"],\n            UserType: results[\"userType\"],\n            UserName: results[\"userName\"],\n            Password: results[\"password\"],\n            FullName: results[\"fullName\"],\n            Address: results[\"address\"],\n            ContactNumber: results[\"contactNumber\"],\n            EmailAddress: results[\"emailAddress\"],\n            Status: results[\"status\"]\n          }\n        }\n\n        this.loginUsertSubject.next(loginUserModel);\n      },\n      error => {\n        this.loginUsertSubject.next(null);\n      }\n    );\n  }\n\n  public detaiProduct(id: number): void {\n    let productModel: CreateOrderProductModel = null;\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstProduct/detail/\" + id, this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results != null) {\n          productModel = {\n            Id: results[\"id\"],\n            ProductCode: results[\"productCode\"],\n            ProductManualCode: results[\"productManualCode\"],\n            ProductSKUCode: results[\"productSKUCode\"],\n            ProductDescription: results[\"productDescription\"],\n            Particulars: results[\"particulars\"],\n            ImageURL: results[\"imageURL\"],\n            Price: results[\"price\"],\n            SellerUserName: results[\"sellerUserName\"],\n            SellerFullName: results[\"sellerFullName\"],\n            Status: results[\"status\"]\n          }\n        }\n\n        this.detailProductSubject.next(productModel);\n      },\n      error => {\n        this.detailProductSubject.next(null);\n      }\n    );\n  }\n}\n","import { Router, ActivatedRoute, ActivatedRouteSnapshot, RouterStateSnapshot, ParamMap, } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { CanActivate } from \"@angular/router\";\nimport { Title, Meta } from '@angular/platform-browser';\nimport { Observable } from \"rxjs\";\nimport { map } from 'rxjs/operators';\n\nimport { CreateOrderService } from './create-order/create-order.service';\n\n@Injectable()\nexport class SoftwareBuyerOrderRouterActivate implements CanActivate {\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        public createOrderService: CreateOrderService,\n        private titleService: Title,\n        private metaService: Meta\n    ) { }\n\n    public productDetailSubscription: any;\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        let productId = route.paramMap.get('productId');\n        if (parseInt(productId) != 0) {\n            return new Observable<boolean>((observer) => {\n                this.createOrderService.detaiProduct(parseInt(productId));\n                this.productDetailSubscription = this.createOrderService.detailProductObservable.subscribe(\n                    data => {\n                        if (data != null) {\n                            this.titleService.setTitle(data.ProductDescription);\n                            this.metaService.updateTag({ property: 'og:title', content: data.ProductDescription });\n                            this.metaService.updateTag({ property: 'og:description', content: data.Particulars });\n                            this.metaService.updateTag({ property: 'og:url', content: 'https://www.orderfolder.com/software-buyer-order/create-order/' + productId });\n                            this.metaService.updateTag({ property: 'og:image', content: data.ImageURL });\n                        }\n\n                        observer.next(true);\n                        observer.complete();\n                    }\n                );\n            });\n        } else {\n            return true;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.productDetailSubscription != null) this.productDetailSubscription.unsubscribe();\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SoftwareBuyerOrderRouterActivate } from './software-buyer-oder.router.activate';\n\nimport { SoftwareBuyerOrderComponent } from './software-buyer-order.component';\nimport { CreateOrderComponent } from './create-order/create-order.component';\nimport { ConfirmOrderComponent } from './confirm-order/confirm-order.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SoftwareBuyerOrderComponent,\n    children: [\n      { path: '', component: CreateOrderComponent },\n      { path: 'create-order/:productId', canActivate: [SoftwareBuyerOrderRouterActivate], component: CreateOrderComponent },\n      { path: 'confirm-order/:id', component: ConfirmOrderComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SoftwareBuyerOrderRoutingModule { }\n","import { Component, OnInit, ChangeDetectorRef, OnDestroy, ViewChild } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-software-buyer-order',\n  templateUrl: './software-buyer-order.component.html',\n  styleUrls: ['./software-buyer-order.component.css']\n})\nexport class SoftwareBuyerOrderComponent implements OnInit {\n  public mobileQuery: MediaQueryList;\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    private router: Router\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"main-container\" [class.main-is-mobile]=\"mobileQuery.matches\">\n    <mat-toolbar color=\"\" class=\"main-toolbar\">\n        <a routerLink=\"/landing\">\n            <img src=\"./../../assets/logo/ordercliq_logo_nav.png\" style=\"margin-top: 10px;\" height=\"20\" />\n        </a>\n    </mat-toolbar>\n\n    <mat-sidenav-container class=\"sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\n        <mat-sidenav-content>\n            <router-outlet></router-outlet>\n            <br />\n            <br />\n        </mat-sidenav-content>\n    </mat-sidenav-container>\n\n    <footer class=\"footer\">\n        <div style=\"margin-top: 3px; font-size: 15px;\">\n            &nbsp; © 2020 <b>ordercliq.com</b>\n        </div>\n        <span class=\"spacer\"></span>\n        <a href=\"#\">\n            <img src=\"../../assets/footer/facebook.png\" height=\"25\"\n                style=\"vertical-align: middle; margin-right: 10px;\" />\n        </a>\n        <a href=\"#\">\n            <img src=\"../../assets/footer/instagram.png\" height=\"25\"\n                style=\"vertical-align: middle; margin-right: 10px;\" />\n        </a>\n        <a href=\"#\">\n            <img src=\"../../assets/footer/twitter.png\" height=\"25\" style=\"vertical-align: middle; margin-right: 10px;\" />\n        </a>\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n    </footer>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SoftwareBuyerOrderRoutingModule } from './software-buyer-order-routing.module';\nimport { SoftwareBuyerOrderRouterActivate } from './software-buyer-oder.router.activate';\n\nimport { SoftwareBuyerOrderComponent } from './software-buyer-order.component';\nimport { CreateOrderComponent } from './create-order/create-order.component';\nimport { ConfirmOrderComponent } from './confirm-order/confirm-order.component';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    SoftwareBuyerOrderComponent,\n    CreateOrderComponent,\n    ConfirmOrderComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SoftwareBuyerOrderRoutingModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatListModule,\n    MatTabsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatDialogModule,\n    FlexLayoutModule\n  ],\n  providers: [\n    CdkColumnDef,\n    SoftwareBuyerOrderRouterActivate\n  ]\n})\nexport class SoftwareBuyerOrderModule { }\n"],"sourceRoot":"webpack:///"}