{"version":3,"sources":["./src/app/software-seller/dashboard/dashboard.component.ts","./src/app/software-seller/dashboard/dashboard.component.html","./src/app/software-seller/order/order-cancel-dialog/order-cancel-dialog.component.ts","./src/app/software-seller/order/order-cancel-dialog/order-cancel-dialog.component.html","./src/app/software-seller/order/order-complete-dialog/order-complete-dialog.component.ts","./src/app/software-seller/order/order-complete-dialog/order-complete-dialog.component.html","./src/app/software-seller/order/order-detail-dialog/order-detail-dialog.component.ts","./src/app/software-seller/order/order-detail-dialog/order-detail-dialog.component.html","./src/app/software-seller/order/order-verify-dialog/order-verify-dialog.component.ts","./src/app/software-seller/order/order-verify-dialog/order-verify-dialog.component.html","./src/app/software-seller/order/order.component.ts","./src/app/software-seller/order/order.component.html","./src/app/software-seller/order/order.service.ts","./src/app/software-seller/product/product-create-order-link-dialog/product-create-order-link-dialog.component.ts","./src/app/software-seller/product/product-create-order-link-dialog/product-create-order-link-dialog.component.html","./src/app/software-seller/product/product-delete-dialog/product-delete-dialog.component.ts","./src/app/software-seller/product/product-delete-dialog/product-delete-dialog.component.html","./src/app/software-seller/product/product-detail-dialog/product-detail-dialog.component.ts","./src/app/software-seller/product/product-detail-dialog/product-detail-dialog.component.html","./src/app/software-seller/product/product.component.ts","./src/app/software-seller/product/product.component.html","./src/app/software-seller/product/product.service.ts","./src/app/software-seller/profile/profile.component.ts","./src/app/software-seller/profile/profile.component.html","./src/app/software-seller/profile/profile.service.ts","./src/app/software-seller/software-seller-routing.module.ts","./src/app/software-seller/software-seller.component.ts","./src/app/software-seller/software-seller.component.html","./src/app/software-seller/software-seller.module.ts","./src/app/software-seller/software-seller.router.activate.ts","./src/app/software-seller/software-seller.service.ts"],"names":[],"mappings":"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","file":"software-seller-software-seller-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/dashboard.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Dashboard</span>\n</mat-toolbar>\n<div class=\"software-container\">\n    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n        <div fxFlex=\"25\" style=\"margin: 5px;\">\n            <button routerLink=\"/software-seller/order\" mat-stroked-button style=\"width: 100%; padding: 30px;\">\n                <img src=\"../../../assets/dashboard-icons/order.png\" height=\"100\" />\n                <br />\n                <br />\n                <span style=\"font-size: 25px;\">Orders</span>\n            </button>\n        </div>\n        <div fxFlex=\"25\" style=\"margin: 5px;\">\n            <button routerLink=\"/software-seller/product\" mat-stroked-button style=\"width: 100%; padding: 30px;\">\n                <img src=\"../../../assets/dashboard-icons/product.png\" height=\"100\" />\n                <br />\n                <br />\n                <span style=\"font-size: 25px;\">Products</span>\n            </button>\n        </div>\n        <div fxFlex=\"25\" style=\"margin: 5px;\">\n            <button routerLink=\"/software-seller/profile\" mat-stroked-button style=\"width: 100%; padding: 30px;\">\n                <img src=\"../../../assets/dashboard-icons/profile.png\" height=\"100\" />\n                <br />\n                <br />\n                <span style=\"font-size: 25px;\">Profile</span>\n            </button>\n        </div>\n        <div fxFlex=\"25\" style=\"margin: 5px;\">\n\n        </div>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrderService } from '../order.service';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { AppSettings } from './../../../app-settings';\n\n@Component({\n  selector: 'app-order-cancel-dialog',\n  templateUrl: './order-cancel-dialog.component.html',\n  styleUrls: ['./order-cancel-dialog.component.css']\n})\nexport class OrderCancelDialogComponent implements OnInit {\n\n  constructor(\n    public orderCancelDialogComponent: MatDialogRef<OrderCancelDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public orderCancelDialogData: any,\n    public orderService: OrderService,\n    private snackBar: MatSnackBar,\n    public appSettings: AppSettings\n  ) { }\n\n  public dialogTitle: string = \"Cancel\";\n  public dialogContent: string = this.orderCancelDialogData.content;\n\n  public cancelOrderSubscription: any;\n\n  public buttonOrderCancelDialogCancelClick(): void {\n    let buttonOrderCancelDialogCancel: Element = document.getElementById(\"buttonOrderCancelDialogCancel\");\n    let buttonOrderCancelDialogClose: Element = document.getElementById(\"buttonOrderCancelDialogClose\");\n\n    buttonOrderCancelDialogCancel.setAttribute(\"disabled\", \"disabled\");\n    buttonOrderCancelDialogClose.setAttribute(\"disabled\", \"disabled\");\n\n    this.orderService.cancelOrder(this.orderCancelDialogData.orderData.Id);\n    this.cancelOrderSubscription = this.orderService.cancelOrderObservable.subscribe(\n      data => {\n        if (data[0] == \"success\") {\n          this.snackBar.open('Order no. ' + this.orderCancelDialogData.orderData.OrderNumber + ' was successfully cancelled!', '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"green-snackbar\"]\n          });\n\n          this.orderCancelDialogComponent.close(200);\n        } else if (data[0] == \"failed\") {\n          this.snackBar.open(data[1], '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"orange-snackbar\"]\n          });\n\n          buttonOrderCancelDialogCancel.removeAttribute(\"disabled\");\n          buttonOrderCancelDialogClose.removeAttribute(\"disabled\");\n        }\n\n        if (this.cancelOrderSubscription != null) this.cancelOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public buttonOrderCancelDialogCloseClick(): void {\n    this.orderCancelDialogComponent.close();\n    if (this.cancelOrderSubscription != null) this.cancelOrderSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy() {\n    if (this.cancelOrderSubscription != null) this.cancelOrderSubscription.unsubscribe();\n  }\n}\n","<h1 mat-dialog-title>\n    {{ dialogTitle }}\n</h1>\n<div mat-dialog-content>\n    <p>{{ dialogContent }}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-flat-button color=\"warn\" (click)=\"buttonOrderCancelDialogCancelClick()\"\n        id=\"buttonOrderCancelDialogCancel\">\n        <mat-icon matSuffix>cancel</mat-icon> Cancel\n    </button>\n    &nbsp;\n    <button mat-stroked-button (click)=\"buttonOrderCancelDialogCloseClick()\" id=\"buttonOrderCancelDialogClose\">\n        <mat-icon matSuffix>close</mat-icon> Close\n    </button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrderService } from '../order.service';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { AppSettings } from './../../../app-settings';\n\n@Component({\n  selector: 'app-order-complete-dialog',\n  templateUrl: './order-complete-dialog.component.html',\n  styleUrls: ['./order-complete-dialog.component.css']\n})\nexport class OrderCompleteDialogComponent implements OnInit {\n\n  constructor(\n    public orderCompleteDialogComponent: MatDialogRef<OrderCompleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public orderCompleteDialogData: any,\n    public orderService: OrderService,\n    private snackBar: MatSnackBar,\n    public appSettings: AppSettings\n  ) { }\n\n  public dialogTitle: string = \"Complete\";\n  public dialogContent: string = this.orderCompleteDialogData.content;\n\n  public completeOrderSubscription: any;\n\n  public buttonOrderCompleteDialogCompleteClick(): void {\n    let buttonOrderCompleteDialogComplete: Element = document.getElementById(\"buttonOrderCompleteDialogComplete\");\n    let buttonOrderCompleteDialogClose: Element = document.getElementById(\"buttonOrderCompleteDialogClose\");\n\n    buttonOrderCompleteDialogComplete.setAttribute(\"disabled\", \"disabled\");\n    buttonOrderCompleteDialogClose.setAttribute(\"disabled\", \"disabled\");\n\n    this.orderService.completeOrder(this.orderCompleteDialogData.orderData.Id);\n    this.completeOrderSubscription = this.orderService.completeOrderObservable.subscribe(\n      data => {\n        if (data[0] == \"success\") {\n          this.snackBar.open('Order no. ' + this.orderCompleteDialogData.orderData.OrderNumber + ' was successfully completed!', '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"green-snackbar\"]\n          });\n\n          this.orderCompleteDialogComponent.close(200);\n        } else if (data[0] == \"failed\") {\n          this.snackBar.open(data[1], '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"orange-snackbar\"]\n          });\n\n          buttonOrderCompleteDialogComplete.removeAttribute(\"disabled\");\n          buttonOrderCompleteDialogClose.removeAttribute(\"disabled\");\n        }\n\n        if (this.completeOrderSubscription != null) this.completeOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public buttonOrderCompleteDialogCloseClick(): void {\n    this.orderCompleteDialogComponent.close();\n    if (this.completeOrderSubscription != null) this.completeOrderSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n  }\n  \n  ngOnDestroy() {\n    if (this.completeOrderSubscription != null) this.completeOrderSubscription.unsubscribe();\n  }\n}\n","<h1 mat-dialog-title>\n    {{ dialogTitle }}\n</h1>\n<div mat-dialog-content>\n    <p>{{ dialogContent }}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-flat-button color=\"accent\" (click)=\"buttonOrderCompleteDialogCompleteClick()\"\n        id=\"buttonOrderCompleteDialogComplete\">\n        <mat-icon matSuffix>check_circle</mat-icon> Complete\n    </button>\n    &nbsp;\n    <button mat-stroked-button (click)=\"buttonOrderCompleteDialogCloseClick()\" id=\"buttonOrderCompleteDialogClose\">\n        <mat-icon matSuffix>close</mat-icon> Close\n    </button>\n</div>","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\nimport { OrderService } from './../order.service';\nimport { OrderDetailModel } from './order-detail.model';\n\nimport { AppSettings } from './../../../app-settings';\n\nimport { OrderVerifyDialogComponent } from '../order-verify-dialog/order-verify-dialog.component';\nimport { OrderCompleteDialogComponent } from '../order-complete-dialog/order-complete-dialog.component';\nimport { OrderCancelDialogComponent } from '../order-cancel-dialog/order-cancel-dialog.component';\n\n@Component({\n  selector: 'app-order-detail-dialog',\n  templateUrl: './order-detail-dialog.component.html',\n  styleUrls: ['./order-detail-dialog.component.css']\n})\nexport class OrderDetailDialogComponent implements OnInit {\n\n  constructor(\n    public orderDetailDialogComponent: MatDialogRef<OrderDetailDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public orderDetailDialogData: any,\n    public orderService: OrderService,\n    private snackBar: MatSnackBar,\n    public appSettings: AppSettings,\n    private orderDetailDialog: MatDialog,\n    private orderVerifyDialog: MatDialog,\n    private orderCancelDialog: MatDialog\n  ) { }\n\n  public dialogTitle: string = this.orderDetailDialogData.title;\n  public dialogContent: string = this.orderDetailDialogData.content;\n\n  public orderStatus: string = this.orderDetailDialogData.status;\n\n  public orderDetailSubscription: any;\n  public orderDetailModel: OrderDetailModel = {\n    Id: 0,\n    OrderNumber: \"\",\n    OrderDate: \"\",\n    ProductCode: \"\",\n    ProductManualCode: \"\",\n    ProductSKUCode: \"\",\n    ProductDescription: \"\",\n    Remarks: \"\",\n    ProductPrice: \"\",\n    Quantity: \"\",\n    Amount: \"\",\n    SellerUserName: \"\",\n    SellerFullName: \"\",\n    BuyerUserName: \"\",\n    BuyerFullName: \"\",\n    BuyerAddress: \"\",\n    BuyerContactNumber: \"\",\n    Status: \"\"\n  };\n\n  public orderDetailSpinnerHidden: boolean = false;\n  public orderDetailNotFoundHidden: boolean = true;\n  public orderDetailSpinnerContentHidden: boolean = true;\n\n  public buttonOrderDetailDialogVerifiedHidden: boolean = true;\n  public buttonOrderDetailDialogCompleteHidden: boolean = true;\n  public buttonOrderDetailDialogCancelHidden: boolean = true;\n\n  public getOrderDetail(): void {\n    let id: number = parseInt(this.orderDetailDialogData.orderData.Id);\n\n    this.orderService.orderDetail(id);\n    this.orderDetailSubscription = this.orderService.orderDetailObservable.subscribe(\n      data => {\n        if (data != null) {\n          this.orderDetailModel = {\n            Id: data.Id,\n            OrderNumber: data.OrderNumber,\n            OrderDate: data.OrderDate,\n            ProductCode: data.ProductCode,\n            ProductManualCode: data.ProductManualCode,\n            ProductSKUCode: data.ProductSKUCode,\n            ProductDescription: data.ProductDescription,\n            Remarks: data.Remarks,\n            ProductPrice: data.ProductPrice,\n            Quantity: data.Quantity,\n            Amount: data.Amount,\n            SellerUserName: data.SellerUserName,\n            SellerFullName: data.SellerFullName,\n            BuyerUserName: data.BuyerUserName,\n            BuyerFullName: data.BuyerFullName,\n            BuyerAddress: data.BuyerAddress,\n            BuyerContactNumber: data.BuyerContactNumber,\n            Status: data.Status\n          };\n\n          this.orderDetailSpinnerHidden = true;\n          this.orderDetailNotFoundHidden = true;\n          this.orderDetailSpinnerContentHidden = false;\n        } else {\n          this.orderDetailSpinnerHidden = true;\n          this.orderDetailNotFoundHidden = false;\n          this.orderDetailSpinnerContentHidden = true;\n        }\n\n        if (this.orderDetailSubscription != null) this.orderDetailSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public buttonOrderDetailDialogVerifiedClick(): void {\n    const openOrderVerifyDialog = this.orderVerifyDialog.open(OrderVerifyDialogComponent, {\n      width: '300px',\n      data: {\n        content: \"Verify order no. \" + this.orderDetailModel.OrderNumber + \"?\",\n        orderData: this.orderDetailModel\n      },\n      disableClose: true\n    });\n\n    openOrderVerifyDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.orderDetailDialogComponent.close(200);\n      }\n    });\n  }\n\n  public buttonOrderDetailDialogCompleteClick(): void {\n    const completeOrderVerifyDialog = this.orderVerifyDialog.open(OrderCompleteDialogComponent, {\n      width: '300px',\n      data: {\n        content: \"Complete order no. \" + this.orderDetailModel.OrderNumber + \"?\",\n        orderData: this.orderDetailModel\n      },\n      disableClose: true\n    });\n\n    completeOrderVerifyDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.orderDetailDialogComponent.close(200);\n      }\n    });\n  }\n\n  public buttonOrderDetailDialogCancelClick(): void {\n    const openOrderCancelDialog = this.orderCancelDialog.open(OrderCancelDialogComponent, {\n      width: '300px',\n      data: {\n        content: \"Cancel order no. \" + this.orderDetailModel.OrderNumber + \"?\",\n        orderData: this.orderDetailModel\n      },\n      disableClose: true\n    });\n\n    openOrderCancelDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.orderDetailDialogComponent.close(200);\n      }\n    });\n  }\n\n  public buttonOrderDetailDialogCloseClick(): void {\n    this.orderDetailDialogComponent.close();\n  }\n\n  ngOnInit(): void {\n    if (this.orderStatus === \"Open\") {\n      this.buttonOrderDetailDialogVerifiedHidden = false;\n      this.buttonOrderDetailDialogCompleteHidden = true;\n      this.buttonOrderDetailDialogCancelHidden = false;\n    } else if (this.orderStatus === \"Verified\") {\n      this.buttonOrderDetailDialogVerifiedHidden = true;\n      this.buttonOrderDetailDialogCompleteHidden = false;\n      this.buttonOrderDetailDialogCancelHidden = false;\n    } else if (this.orderStatus === \"Completed\") {\n      this.buttonOrderDetailDialogVerifiedHidden = true;\n      this.buttonOrderDetailDialogCompleteHidden = true;\n      this.buttonOrderDetailDialogCancelHidden = true;\n    } else if (this.orderStatus === \"Cancelled\") {\n      this.buttonOrderDetailDialogVerifiedHidden = true;\n      this.buttonOrderDetailDialogCompleteHidden = true;\n      this.buttonOrderDetailDialogCancelHidden = true;\n    } else {\n      this.buttonOrderDetailDialogVerifiedHidden = true;\n      this.buttonOrderDetailDialogCompleteHidden = true;\n      this.buttonOrderDetailDialogCancelHidden = true;\n    }\n\n    this.getOrderDetail();\n  }\n\n  ngOnDestroy() {\n    if (this.orderDetailSubscription != null) this.orderDetailSubscription.unsubscribe();\n  }\n}\n","<h1 mat-dialog-title>\n    Order Detail\n</h1>\n<mat-dialog-content>\n    <mat-tab-group mat-align-tabs=\"start\">\n        <mat-tab label=\"Order Detail\">\n            <div [hidden]=\"orderDetailSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"orderDetailNotFoundHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"35\"></div>\n                    <div fxFlex=\"30\">\n                        <div style=\"width: 100%; text-align: center;\">\n                            <img src=\"./../../../../assets/dashboard-icons/error-404.png\" style=\"width: 100%;\" />\n                        </div>\n                    </div>\n                    <div fxFlex=\"35\"></div>\n                </div>\n                <div style=\"width: 100%; text-align: center; font-size: 20px;\">\n                    <p>Order details not found in the server. </p>\n                </div>\n            </div>\n            <div [hidden]=\"orderDetailSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"50\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Order Number</mat-label>\n                                    <input readonly matInput [(ngModel)]=\"orderDetailModel.OrderNumber\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_order_number maxlength=\"100\"\n                                        placeholder=\"0000000001\" />\n                                    <mat-icon matSuffix>shopping_cart</mat-icon>\n                                    <mat-hint align=\"end\">{{text_order_number.value.length}} / 100</mat-hint>\n                                </mat-form-field>\n                            </div>\n                            <div fxFlex=\"50\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Order Date</mat-label>\n                                    <input readonly matInput [(ngModel)]=\"orderDetailModel.OrderDate\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_order_date maxlength=\"100\"\n                                        placeholder=\"07/19/2020\" />\n                                    <mat-icon matSuffix>calendar_today</mat-icon>\n                                    <mat-hint align=\"end\">{{text_order_date.value.length}} / 100</mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Product Description</mat-label>\n                                    <input readonly matInput [(ngModel)]=\"orderDetailModel.ProductDescription\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_product_description maxlength=\"1000\"\n                                        placeholder=\"Eg., Ethyl Alcohol (CASINO) 500mL\" />\n                                    <mat-icon matSuffix>shop</mat-icon>\n                                    <mat-hint align=\"end\">{{text_product_description.value.length}} / 1000</mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"50\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Product Manual Code</mat-label>\n                                    <input readonly matInput [(ngModel)]=\"orderDetailModel.ProductManualCode\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_product_manual_code maxlength=\"250\"\n                                        placeholder=\"4800011121529\" />\n                                    <mat-icon matSuffix>view_array</mat-icon>\n                                    <mat-hint align=\"end\">{{text_product_manual_code.value.length}} / 250</mat-hint>\n                                </mat-form-field>\n                            </div>\n                            <div fxFlex=\"50\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Product SKU Code</mat-label>\n                                    <input readonly matInput [(ngModel)]=\"orderDetailModel.ProductSKUCode\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_product_SKU_code maxlength=\"250\"\n                                        placeholder=\"4800011121529\" />\n                                    <mat-icon matSuffix>view_array</mat-icon>\n                                    <mat-hint align=\"end\">{{text_product_SKU_code.value.length}} / 250</mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"50\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Price</mat-label>\n                                    <input readonly type=\"text\" matInput [(ngModel)]=\"orderDetailModel.ProductPrice\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_product_price maxlength=\"100\"\n                                        placeholder=\"0.00\" />\n                                    <mat-icon matSuffix>local_offer</mat-icon>\n                                    <mat-hint align=\"end\">{{text_product_price.value.length}} / 100</mat-hint>\n                                </mat-form-field>\n                            </div>\n                            <div fxFlex=\"50\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Quantity</mat-label>\n                                    <input readonly type=\"text\" matInput [(ngModel)]=\"orderDetailModel.Quantity\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_order_quantity maxlength=\"100\"\n                                        placeholder=\"0.00\" />\n                                    <mat-icon matSuffix>format_list_numbered_rtl</mat-icon>\n                                    <mat-hint align=\"end\">{{text_order_quantity.value.length}} / 100</mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Amount</mat-label>\n                                    <input readonly type=\"text\" matInput matInput [(ngModel)]=\"orderDetailModel.Amount\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_order_amount maxlength=\"100\"\n                                        placeholder=\"0.00\" />\n                                    <mat-icon matSuffix>money</mat-icon>\n                                    <mat-hint align=\"end\">{{text_order_amount.value.length}} / 100</mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Shipping Address\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"100\" style=\"margin: 5px;\">\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"100\" style=\"margin: 5px;\">\n                            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                <mat-label>Buyers Full Name</mat-label>\n                                <input readonly matInput [(ngModel)]=\"orderDetailModel.BuyerFullName\"\n                                    [ngModelOptions]=\"{standalone: true}\" #text_buyers_full_name maxlength=\"1000\"\n                                    placeholder=\"Last Name, First Name\" />\n                                <mat-icon matSuffix>person</mat-icon>\n                                <mat-hint align=\"end\">{{text_buyers_full_name.value.length}} / 1000</mat-hint>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"100\" style=\"margin: 5px;\">\n                            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                <mat-label>Complete Address</mat-label>\n                                <textarea readonly [(ngModel)]=\"orderDetailModel.BuyerAddress\"\n                                    [ngModelOptions]=\"{standalone: true}\" matInput #text_compelete_address\n                                    maxlength=\"1000\"\n                                    placeholder=\"eg., House/Bldg No., Street, Barangay, City, Country and Postal Code\"\n                                    rows=\"7\"></textarea>\n                                <mat-icon matSuffix>edit_location</mat-icon>\n                                <mat-hint align=\"end\">{{text_compelete_address.value.length}} / 1000\n                                </mat-hint>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"50\" style=\"margin: 5px;\">\n                            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                <mat-label>Contact Number</mat-label>\n                                <input readonly matInput [(ngModel)]=\"orderDetailModel.BuyerContactNumber\"\n                                    [ngModelOptions]=\"{standalone: true}\" #text_buyers_contact_number maxlength=\"250\"\n                                    placeholder=\"09569863933\" />\n                                <mat-icon matSuffix>phone</mat-icon>\n                                <mat-hint align=\"end\">{{text_buyers_contact_number.value.length}} / 250</mat-hint>\n                            </mat-form-field>\n                        </div>\n                        <div fxFlex=\"50\" style=\"margin: 5px;\">\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-flat-button color=\"primary\" *ngIf=\"!buttonOrderDetailDialogVerifiedHidden\"\n        (click)=\"buttonOrderDetailDialogVerifiedClick()\">\n        <mat-icon matSuffix>fact_check</mat-icon> Verified\n    </button>\n    &nbsp;\n    <button mat-flat-button color=\"accent\" *ngIf=\"!buttonOrderDetailDialogCompleteHidden\"\n        (click)=\"buttonOrderDetailDialogCompleteClick()\">\n        <mat-icon matSuffix>check_circle</mat-icon> Complete\n    </button>\n    &nbsp;\n    <button mat-flat-button color=\"warn\" *ngIf=\"!buttonOrderDetailDialogCancelHidden\"\n        (click)=\"buttonOrderDetailDialogCancelClick()\">\n        <mat-icon matSuffix>cancel</mat-icon> Cancel\n    </button>\n    &nbsp;\n    <button mat-stroked-button (click)=\"buttonOrderDetailDialogCloseClick()\">\n        <mat-icon matSuffix>close</mat-icon> Close\n    </button>\n</mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrderService } from '../order.service';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { AppSettings } from './../../../app-settings';\n\n@Component({\n  selector: 'app-order-verify-dialog',\n  templateUrl: './order-verify-dialog.component.html',\n  styleUrls: ['./order-verify-dialog.component.css']\n})\nexport class OrderVerifyDialogComponent implements OnInit {\n\n  constructor(\n    public orderVerifyDialogComponent: MatDialogRef<OrderVerifyDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public orderVerifyDialogData: any,\n    public orderService: OrderService,\n    private snackBar: MatSnackBar,\n    public appSettings: AppSettings\n  ) { }\n\n  public dialogTitle: string = \"Verify\";\n  public dialogContent: string = this.orderVerifyDialogData.content;\n\n  public verifyOrderSubscription: any;\n\n  public buttonOrderVerifyDialogVerifyClick(): void {\n    let buttonOrderVerifyDialogVerify: Element = document.getElementById(\"buttonOrderVerifyDialogVerify\");\n    let buttonOrderVerifyDialogClose: Element = document.getElementById(\"buttonOrderVerifyDialogClose\");\n\n    buttonOrderVerifyDialogVerify.setAttribute(\"disabled\", \"disabled\");\n    buttonOrderVerifyDialogClose.setAttribute(\"disabled\", \"disabled\");\n\n    this.orderService.verifyOrder(this.orderVerifyDialogData.orderData.Id);\n    this.verifyOrderSubscription = this.orderService.verifyOrderObservable.subscribe(\n      data => {\n        if (data[0] == \"success\") {\n          this.snackBar.open('Order no. ' + this.orderVerifyDialogData.orderData.OrderNumber + ' was successfully verified!', '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"green-snackbar\"]\n          });\n\n          this.orderVerifyDialogComponent.close(200);\n        } else if (data[0] == \"failed\") {\n          this.snackBar.open(data[1], '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"orange-snackbar\"]\n          });\n\n          buttonOrderVerifyDialogVerify.removeAttribute(\"disabled\");\n          buttonOrderVerifyDialogClose.removeAttribute(\"disabled\");\n        }\n\n        if (this.verifyOrderSubscription != null) this.verifyOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public buttonOrderVerifyDialogCloseClick(): void {\n    this.orderVerifyDialogComponent.close();\n    if (this.verifyOrderSubscription != null) this.verifyOrderSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy() {\n    if (this.verifyOrderSubscription != null) this.verifyOrderSubscription.unsubscribe();\n  }\n}\n","<h1 mat-dialog-title>\n    {{ dialogTitle }}\n</h1>\n<div mat-dialog-content>\n    <p>{{ dialogContent }}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-flat-button color=\"primary\" (click)=\"buttonOrderVerifyDialogVerifyClick()\"\n        id=\"buttonOrderVerifyDialogVerify\">\n        <mat-icon matSuffix>fact_check</mat-icon> Verify\n    </button>\n    &nbsp;\n    <button mat-stroked-button (click)=\"buttonOrderVerifyDialogCloseClick()\" id=\"buttonOrderVerifyDialogClose\">\n        <mat-icon matSuffix>close</mat-icon> Close\n    </button>\n</div>","import { Component, OnInit, ViewChild, TemplateRef, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormControl } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nimport { OrderDetailDialogComponent } from './order-detail-dialog/order-detail-dialog.component';\nimport { OrderVerifyDialogComponent } from './order-verify-dialog/order-verify-dialog.component'\nimport { OrderCancelDialogComponent } from './order-cancel-dialog/order-cancel-dialog.component'\nimport { OrderCompleteDialogComponent } from './order-complete-dialog/order-complete-dialog.component'\n\nimport { OpenOrderDataInterface } from './order-data-interface/open-order-data-interface';\nimport { VerifiedOrderDataInterface } from './order-data-interface/verified-order-data-interface';\nimport { CompletedOrderDataInterface } from './order-data-interface/completed-order-data-interface';\nimport { CancelledOrderDataInterface } from './order-data-interface/cancelled-order-data-interface';\n\nimport { OrderService } from \"./order.service\";\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n\n  constructor(\n    private orderService: OrderService,\n    private orderDetailDialog: MatDialog,\n    private orderVerifyDialog: MatDialog,\n    private orderCancelDialog: MatDialog\n  ) { }\n\n  public openOrderDisplayedColumns: string[] = [\n    'ButtonView',\n    'OrderNumber',\n    'OrderDate',\n    'ProductDescription',\n    'ProductPrice',\n    'Quantity',\n    'Amount',\n    'BuyerFullName',\n    'ButtonVerify',\n    'ButtonCancel'\n  ];\n  public openOrderDataSource: MatTableDataSource<OpenOrderDataInterface>;\n\n  @ViewChild('openOrderPaginator') public openOrderPaginator: MatPaginator;\n  @ViewChild('openOrderSort') public openOrderSort: MatSort;\n\n  public openOrderStartDateFilterFormControl = new FormControl(new Date());\n  public openOrderEndDateFilterFormControl = new FormControl(new Date());\n\n  public listOpenOrderSubscription: any;\n  public openOrderData: OpenOrderDataInterface[] = []\n\n  public openOrderSpinnerHidden: boolean = false;\n  public openOrderSpinnerContentHidden: boolean = true;\n\n  public verifiedOrderDisplayedColumns: string[] = [\n    'ButtonView',\n    'OrderNumber',\n    'OrderDate',\n    'ProductDescription',\n    'ProductPrice',\n    'Quantity',\n    'Amount',\n    'BuyerFullName',\n    'ButtonComplete',\n    'ButtonCancel'\n  ];\n  public verifiedOrderDataSource: MatTableDataSource<VerifiedOrderDataInterface>;\n\n  @ViewChild('verifiedOrderPaginator') public verifiedOrderPaginator: MatPaginator;\n  @ViewChild('verifiedOrderSort') public verifiedOrderSort: MatSort;\n\n  public verifiedOrderStartDateFilterFormControl = new FormControl(new Date());\n  public verifiedOrderEndDateFilterFormControl = new FormControl(new Date());\n\n  public listVerifiedOrderSubscription: any;\n  public verifiedOrderData: VerifiedOrderDataInterface[] = []\n\n  public verifiedOrderSpinnerHidden: boolean = false;\n  public verifiedOrderSpinnerContentHidden: boolean = true;\n\n  public completedOrderDisplayedColumns: string[] = [\n    'ButtonView',\n    'OrderNumber',\n    'OrderDate',\n    'ProductDescription',\n    'ProductPrice',\n    'Quantity',\n    'Amount',\n    'BuyerFullName'\n  ];\n  public completedOrderDataSource: MatTableDataSource<CompletedOrderDataInterface>;\n\n  @ViewChild('completedOrderPaginator') public completedOrderPaginator: MatPaginator;\n  @ViewChild('completedOrderSort') public completedOrderSort: MatSort;\n\n  public completedOrderStartDateFilterFormControl = new FormControl(new Date());\n  public completedOrderEndDateFilterFormControl = new FormControl(new Date());\n\n  public listCompletedOrderSubscription: any;\n  public completedOrderData: CompletedOrderDataInterface[] = []\n\n  public completedOrderSpinnerHidden: boolean = false;\n  public completedOrderSpinnerContentHidden: boolean = true;\n\n  public cancelledOrderDisplayedColumns: string[] = [\n    'ButtonView',\n    'OrderNumber',\n    'OrderDate',\n    'ProductDescription',\n    'ProductPrice',\n    'Quantity',\n    'Amount',\n    'BuyerFullName'\n  ];\n  public cancelledOrderDataSource: MatTableDataSource<CancelledOrderDataInterface>;\n\n  @ViewChild('cancelledOrderPaginator') public cancelledOrderPaginator: MatPaginator;\n  @ViewChild('cancelledOrderSort') public cancelledOrderSort: MatSort;\n\n  public cancelledOrderStartDateFilterFormControl = new FormControl(new Date());\n  public cancelledOrderEndDateFilterFormControl = new FormControl(new Date());\n\n  public listCancelledOrderSubscription: any;\n  public cancelledOrderData: CancelledOrderDataInterface[] = []\n\n  public cancelledOrderSpinnerHidden: boolean = false;\n  public cancelledOrderSpinnerContentHidden: boolean = true;\n\n  public listOpenOrder() {\n    let openOrderStartDateFilter: string = new Date(this.openOrderStartDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n    let openOrderEndDateFilter: string = new Date(this.openOrderEndDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n\n    this.openOrderData = [];\n    this.openOrderDataSource = new MatTableDataSource(this.openOrderData);\n    this.openOrderDataSource.paginator = this.openOrderPaginator;\n    this.openOrderDataSource.sort = this.openOrderSort;\n\n    this.openOrderSpinnerHidden = false;\n    this.openOrderSpinnerContentHidden = true;\n\n    this.orderService.listOpenOrderData(openOrderStartDateFilter, openOrderEndDateFilter);\n    this.listOpenOrderSubscription = this.orderService.listOpenOrderObservable.subscribe(\n      data => {\n        this.openOrderSpinnerHidden = true;\n        this.openOrderSpinnerContentHidden = false;\n\n        if (data.length > 0) {\n          this.openOrderData = data;\n          this.openOrderDataSource = new MatTableDataSource(this.openOrderData);\n          this.openOrderDataSource.paginator = this.openOrderPaginator;\n          this.openOrderDataSource.sort = this.openOrderSort;\n        }\n\n        if (this.listOpenOrderSubscription != null) this.listOpenOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public openOrderDateFiltersDateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.listOpenOrder();\n  }\n\n  public applyOpenOrderFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.openOrderDataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.openOrderDataSource.paginator) {\n      this.openOrderDataSource.paginator.firstPage();\n    }\n  }\n\n  public buttonPreviewOpenOrderClick(openOrder: OpenOrderDataInterface): void {\n    const openOrderDetailDialog = this.orderDetailDialog.open(OrderDetailDialogComponent, {\n      width: '600px',\n      data: {\n        status: \"Open\",\n        orderData: openOrder\n      },\n      disableClose: true\n    });\n\n    openOrderDetailDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listOpenOrder();\n        this.listVerifiedOrder();\n        this.listCancelledOrder();\n      }\n    });\n  }\n\n  public buttonVerifyOpenOrderClick(openOrder: OpenOrderDataInterface): void {\n    const openOrderVerifyDialog = this.orderVerifyDialog.open(OrderVerifyDialogComponent, {\n      width: '300px',\n      data: {\n        content: \"Verify order no. \" + openOrder.OrderNumber + \"?\",\n        orderData: openOrder\n      },\n      disableClose: true\n    });\n\n    openOrderVerifyDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n\n      }\n    });\n  }\n\n  public buttonCancelOpenOrderClick(openOrder: OpenOrderDataInterface): void {\n    const openOrderCancelDialog = this.orderCancelDialog.open(OrderCancelDialogComponent, {\n      width: '300px',\n      data: {\n        content: \"Cancel order no. \" + openOrder.OrderNumber + \"?\",\n        orderData: openOrder\n      },\n      disableClose: true\n    });\n\n    openOrderCancelDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listOpenOrder();\n        this.listCancelledOrder();\n      }\n    });\n  }\n\n  public listVerifiedOrder() {\n    let verifiedOrderStartDateFilter: string = new Date(this.verifiedOrderStartDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n    let verifiedOrderEndDateFilter: string = new Date(this.verifiedOrderEndDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n\n    this.verifiedOrderData = [];\n    this.verifiedOrderDataSource = new MatTableDataSource(this.verifiedOrderData);\n    this.verifiedOrderDataSource.paginator = this.verifiedOrderPaginator;\n    this.verifiedOrderDataSource.sort = this.verifiedOrderSort;\n\n    this.verifiedOrderSpinnerHidden = false;\n    this.verifiedOrderSpinnerContentHidden = true;\n\n    this.orderService.listVerifiedOrderData(verifiedOrderStartDateFilter, verifiedOrderEndDateFilter);\n    this.listVerifiedOrderSubscription = this.orderService.listVerifiedOrderObservable.subscribe(\n      data => {\n        this.verifiedOrderSpinnerHidden = true;\n        this.verifiedOrderSpinnerContentHidden = false;\n\n        if (data.length > 0) {\n          this.verifiedOrderData = data;\n          this.verifiedOrderDataSource = new MatTableDataSource(this.verifiedOrderData);\n          this.verifiedOrderDataSource.paginator = this.verifiedOrderPaginator;\n          this.verifiedOrderDataSource.sort = this.verifiedOrderSort;\n        }\n\n        if (this.listVerifiedOrderSubscription != null) this.listVerifiedOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public verifiedOrderDateFiltersDateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.listVerifiedOrder();\n  }\n\n  public applyVerifiedOrderFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.verifiedOrderDataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.verifiedOrderDataSource.paginator) {\n      this.verifiedOrderDataSource.paginator.firstPage();\n    }\n  }\n\n  public buttonPreviewVerifiedOrderClick(verifiedOrder: VerifiedOrderDataInterface): void {\n    const openOrderDetailDialog = this.orderDetailDialog.open(OrderDetailDialogComponent, {\n      width: '600px',\n      data: {\n        status: \"Verified\",\n        orderData: verifiedOrder\n      },\n      disableClose: true\n    });\n\n    openOrderDetailDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listVerifiedOrder();\n        this.listCompletedOrder();\n        this.listCancelledOrder();\n      }\n    });\n  }\n\n  public buttonCompleteVerifiedOrderClick(verifiedOrder: VerifiedOrderDataInterface): void {\n    const completeOrderVerifyDialog = this.orderVerifyDialog.open(OrderCompleteDialogComponent, {\n      width: '300px',\n      data: {\n        content: \"Complete order no. \" + verifiedOrder.OrderNumber + \"?\",\n        orderData: verifiedOrder\n      },\n      disableClose: true\n    });\n\n    completeOrderVerifyDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listVerifiedOrder();\n        this.listCompletedOrder();\n      }\n    });\n  }\n\n  public buttonCancelVerifiedOrderClick(verifiedOrder: VerifiedOrderDataInterface): void {\n    const verifiedOrderCancelDialog = this.orderCancelDialog.open(OrderCancelDialogComponent, {\n      width: '300px',\n      data: {\n        content: \"Cancel order no. \" + verifiedOrder.OrderNumber + \"?\",\n        orderData: verifiedOrder\n      },\n      disableClose: true\n    });\n\n    verifiedOrderCancelDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listVerifiedOrder();\n        this.listCancelledOrder();\n      }\n    });\n  }\n\n  public listCompletedOrder() {\n    let completedOrderStartDateFilter: string = new Date(this.completedOrderStartDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n    let completedOrderEndDateFilter: string = new Date(this.completedOrderEndDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n\n    this.completedOrderData = [];\n    this.completedOrderDataSource = new MatTableDataSource(this.completedOrderData);\n    this.completedOrderDataSource.paginator = this.completedOrderPaginator;\n    this.completedOrderDataSource.sort = this.completedOrderSort;\n\n    this.completedOrderSpinnerHidden = false;\n    this.completedOrderSpinnerContentHidden = true;\n\n    this.orderService.listCompletedOrderData(completedOrderStartDateFilter, completedOrderEndDateFilter);\n    this.listCompletedOrderSubscription = this.orderService.listCompletedOrderObservable.subscribe(\n      data => {\n        this.completedOrderSpinnerHidden = true;\n        this.completedOrderSpinnerContentHidden = false;\n\n        if (data.length > 0) {\n          this.completedOrderData = data;\n          this.completedOrderDataSource = new MatTableDataSource(this.completedOrderData);\n          this.completedOrderDataSource.paginator = this.completedOrderPaginator;\n          this.completedOrderDataSource.sort = this.completedOrderSort;\n        }\n\n        if (this.listCompletedOrderSubscription != null) this.listCompletedOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public completedOrderDateFiltersDateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.listCompletedOrder();\n  }\n\n  public applyCompletedOrderFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.completedOrderDataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.completedOrderDataSource.paginator) {\n      this.completedOrderDataSource.paginator.firstPage();\n    }\n  }\n\n  public buttonPreviewCompletedOrderClick(completedOrder: CompletedOrderDataInterface): void {\n    const openOrderDetailDialog = this.orderDetailDialog.open(OrderDetailDialogComponent, {\n      width: '600px',\n      data: {\n        status: \"Completed\",\n        orderData: completedOrder\n      },\n      disableClose: true\n    });\n\n    openOrderDetailDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n\n      }\n    });\n  }\n\n  public listCancelledOrder() {\n    let cancelledOrderStartDateFilter: string = new Date(this.cancelledOrderStartDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n    let cancelledOrderEndDateFilter: string = new Date(this.cancelledOrderEndDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n\n    this.cancelledOrderData = [];\n    this.cancelledOrderDataSource = new MatTableDataSource(this.cancelledOrderData);\n    this.cancelledOrderDataSource.paginator = this.cancelledOrderPaginator;\n    this.cancelledOrderDataSource.sort = this.cancelledOrderSort;\n\n    this.cancelledOrderSpinnerHidden = false;\n    this.cancelledOrderSpinnerContentHidden = true;\n\n    this.orderService.listCancelledOrderData(cancelledOrderStartDateFilter, cancelledOrderEndDateFilter);\n    this.listCancelledOrderSubscription = this.orderService.listCancelledOrderObservable.subscribe(\n      data => {\n        this.cancelledOrderSpinnerHidden = true;\n        this.cancelledOrderSpinnerContentHidden = false;\n\n        if (data.length > 0) {\n          this.cancelledOrderData = data;\n          this.cancelledOrderDataSource = new MatTableDataSource(this.cancelledOrderData);\n          this.cancelledOrderDataSource.paginator = this.cancelledOrderPaginator;\n          this.cancelledOrderDataSource.sort = this.cancelledOrderSort;\n        }\n\n        if (this.listCancelledOrderSubscription != null) this.listCancelledOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public cancelledOrderDateFiltersDateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.listCancelledOrder();\n  }\n\n  public applyCancelledOrderFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.cancelledOrderDataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.cancelledOrderDataSource.paginator) {\n      this.cancelledOrderDataSource.paginator.firstPage();\n    }\n  }\n\n  public buttonPreviewCancelledOrderClick(cancelledOrder: CancelledOrderDataInterface): void {\n    const openOrderDetailDialog = this.orderDetailDialog.open(OrderDetailDialogComponent, {\n      width: '600px',\n      data: {\n        status: \"Cancelled\",\n        orderData: cancelledOrder\n      },\n      disableClose: true\n    });\n\n    openOrderDetailDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.listOpenOrder();\n    this.listVerifiedOrder();\n    this.listCompletedOrder();\n    this.listCancelledOrder();\n  }\n\n  ngOnDestroy() {\n    if (this.listOpenOrderSubscription != null) this.listOpenOrderSubscription.unsubscribe();\n    if (this.listVerifiedOrderSubscription != null) this.listVerifiedOrderSubscription.unsubscribe();\n    if (this.listCompletedOrderSubscription != null) this.listCompletedOrderSubscription.unsubscribe();\n    if (this.listCancelledOrderSubscription != null) this.listCancelledOrderSubscription.unsubscribe();\n  }\n\n}","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/order.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Orders</span>\n</mat-toolbar>\n<mat-tab-group mat-align-tabs=\"start\">\n    <mat-tab label=\"Open\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Start date</mat-label>\n                        <input matInput [matDatepicker]=\"start_date_picker_open_order\"\n                            [formControl]=\"openOrderStartDateFilterFormControl\"\n                            [value]=\"openOrderStartDateFilterFormControl.value\"\n                            (dateChange)=\"openOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"start_date_picker_open_order\"></mat-datepicker-toggle>\n                        <mat-datepicker #start_date_picker_open_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>End date</mat-label>\n                        <input matInput [matDatepicker]=\"end_date_picker_open_order\"\n                            [formControl]=\"openOrderEndDateFilterFormControl\"\n                            [value]=\"openOrderEndDateFilterFormControl.value\"\n                            (dateChange)=\"openOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"end_date_picker_open_order\"></mat-datepicker-toggle>\n                        <mat-datepicker #end_date_picker_open_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"70\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Filter</mat-label>\n                        <input matInput (keyup)=\"applyOpenOrderFilter($event)\" type=\"text\" #text_filter_open_order\n                            maxlength=\"1000\" placeholder=\"Filter\">\n                        <mat-icon matSuffix>filter_alt</mat-icon>\n                        <mat-hint align=\"end\">{{text_filter_open_order.value.length}} / 1000</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div [hidden]=\"openOrderSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"openOrderSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-table [dataSource]=\"openOrderDataSource\" #openOrderSort=\"matSort\" matSort\n                            style=\"overflow-x: scroll;\">\n                            <ng-container matColumnDef=\"ButtonView\">\n                                <mat-header-cell fxFlex=\"90px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"90px\" *matCellDef=\"let row\">\n                                    <button mat-stroked-button matTooltip=\"Click to view order details.\"\n                                        [matTooltipPosition]=\"'left'\" style=\"width: 100%; background-color: white;\"\n                                        (click)=\"buttonPreviewOpenOrderClick(row)\">\n                                        <mat-icon matSuffix>preview</mat-icon>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderNumber\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order No.\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderNumber}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderDate\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order Date\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderDate}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductDescription\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Product</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.ProductDescription}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductPrice\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Price</mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\">\n                                    ₱ {{row.ProductPrice}}</mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Quantity\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Quantity\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\"> {{row.Quantity}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Amount\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Amount\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\"> ₱ {{row.Amount}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"BuyerFullName\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header>Buyer\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\"> {{row.BuyerFullName}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ButtonVerify\">\n                                <mat-header-cell fxFlex=\"110px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"110px\" *matCellDef=\"let row\">\n                                    <button mat-flat-button color=\"primary\" style=\"width: 100%;\"\n                                        (click)=\"buttonVerifyOpenOrderClick(row)\">\n                                        <mat-icon matSuffix>fact_check</mat-icon> {{row.ButtonVerify}}\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ButtonCancel\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\">\n                                    <button mat-flat-button color=\"warn\" style=\"width: 100%;\"\n                                        (click)=\"buttonCancelOpenOrderClick(row)\">\n                                        <mat-icon matSuffix>cancel</mat-icon> {{row.ButtonCancel}}\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\" openOrderDisplayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: openOrderDisplayedColumns;\"></mat-row>\n\n                            <mat-cell *matNoDataRow>\n                                <td colspan=\"10\" style=\"padding: 15px;\">\n                                    No data matching the filter \"{{text_filter_open_order.value}}\"\n                                </td>\n                            </mat-cell>\n                        </mat-table>\n\n                        <mat-paginator #openOrderPaginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Verified\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Start date</mat-label>\n                        <input matInput [matDatepicker]=\"start_date_picker_verified_order\"\n                            [formControl]=\"verifiedOrderStartDateFilterFormControl\"\n                            [value]=\"verifiedOrderStartDateFilterFormControl.value\"\n                            (dateChange)=\"verifiedOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"start_date_picker_verified_order\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #start_date_picker_verified_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>End date</mat-label>\n                        <input matInput [matDatepicker]=\"end_date_picker_verified_order\"\n                            [formControl]=\"verifiedOrderEndDateFilterFormControl\"\n                            [value]=\"verifiedOrderEndDateFilterFormControl.value\"\n                            (dateChange)=\"verifiedOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"end_date_picker_verified_order\"></mat-datepicker-toggle>\n                        <mat-datepicker #end_date_picker_verified_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"70\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Filter</mat-label>\n                        <input matInput (keyup)=\"applyVerifiedOrderFilter($event)\" type=\"text\"\n                            #text_filter_verified_order maxlength=\"1000\" placeholder=\"Filter\">\n                        <mat-icon matSuffix>filter_alt</mat-icon>\n                        <mat-hint align=\"end\">{{text_filter_verified_order.value.length}} / 1000</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div [hidden]=\"verifiedOrderSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"verifiedOrderSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-table [dataSource]=\"verifiedOrderDataSource\" #verifiedOrderSort=\"matSort\" matSort\n                            style=\"overflow-x: scroll;\">\n                            <ng-container matColumnDef=\"ButtonView\">\n                                <mat-header-cell fxFlex=\"90px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"90px\" *matCellDef=\"let row\">\n                                    <button mat-stroked-button matTooltip=\"Click to view order details.\"\n                                        [matTooltipPosition]=\"'left'\" style=\"width: 100%; background-color: white;\"\n                                        (click)=\"buttonPreviewVerifiedOrderClick(row)\">\n                                        <mat-icon matSuffix>preview</mat-icon>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderNumber\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order No.\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderNumber}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderDate\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order Date\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderDate}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductDescription\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Product</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.ProductDescription}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductPrice\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Price</mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\">\n                                    ₱ {{row.ProductPrice}}</mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Quantity\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Quantity\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\"> {{row.Quantity}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Amount\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Amount\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\"> ₱ {{row.Amount}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"BuyerFullName\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header>Buyer\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\"> {{row.BuyerFullName}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ButtonComplete\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\">\n                                    <button mat-flat-button color=\"accent\" style=\"width: 100%;\"\n                                        (click)=\"buttonCompleteVerifiedOrderClick(row)\">\n                                        <mat-icon matSuffix>check_circle</mat-icon> {{row.ButtonComplete}}\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ButtonCancel\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\">\n                                    <button mat-flat-button color=\"warn\" style=\"width: 100%;\"\n                                        (click)=\"buttonCancelVerifiedOrderClick(row)\">\n                                        <mat-icon matSuffix>cancel</mat-icon> {{row.ButtonCancel}}\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\" verifiedOrderDisplayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: verifiedOrderDisplayedColumns;\"></mat-row>\n\n                            <mat-cell *matNoDataRow>\n                                <td colspan=\"10\" style=\"padding: 15px;\">\n                                    No data matching the filter \"{{text_filter_verified_order.value}}\"\n                                </td>\n                            </mat-cell>\n                        </mat-table>\n\n                        <mat-paginator #verifiedOrderPaginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Completed\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Start date</mat-label>\n                        <input matInput [matDatepicker]=\"start_date_picker_completed_order\"\n                            [formControl]=\"completedOrderStartDateFilterFormControl\"\n                            [value]=\"completedOrderStartDateFilterFormControl.value\"\n                            (dateChange)=\"completedOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"start_date_picker_completed_order\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #start_date_picker_completed_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>End date</mat-label>\n                        <input matInput [matDatepicker]=\"end_date_picker_completed_order\"\n                            [formControl]=\"completedOrderEndDateFilterFormControl\"\n                            [value]=\"completedOrderEndDateFilterFormControl.value\"\n                            (dateChange)=\"completedOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"end_date_picker_completed_order\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #end_date_picker_completed_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"70\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Filter</mat-label>\n                        <input matInput (keyup)=\"applyCompletedOrderFilter($event)\" type=\"text\"\n                            #text_filter_completed_order maxlength=\"1000\" placeholder=\"Filter\">\n                        <mat-icon matSuffix>filter_alt</mat-icon>\n                        <mat-hint align=\"end\">{{text_filter_completed_order.value.length}} / 1000</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div [hidden]=\"completedOrderSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"completedOrderSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-table [dataSource]=\"completedOrderDataSource\" #completedOrderSort=\"matSort\" matSort\n                            style=\"overflow-x: scroll;\">\n                            <ng-container matColumnDef=\"ButtonView\">\n                                <mat-header-cell fxFlex=\"90px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"90px\" *matCellDef=\"let row\">\n                                    <button mat-stroked-button matTooltip=\"Click to view order details.\"\n                                        [matTooltipPosition]=\"'left'\" style=\"width: 100%; background-color: white;\"\n                                        (click)=\"buttonPreviewCompletedOrderClick(row)\">\n                                        <mat-icon matSuffix>preview</mat-icon>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderNumber\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order No.\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderNumber}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderDate\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order Date\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderDate}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductDescription\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Product</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.ProductDescription}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductPrice\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Price</mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\">\n                                    ₱ {{row.ProductPrice}}</mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Quantity\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Quantity\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\"> {{row.Quantity}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Amount\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Amount\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\"> ₱ {{row.Amount}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"BuyerFullName\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header>Buyer\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\"> {{row.BuyerFullName}} </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\" completedOrderDisplayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: completedOrderDisplayedColumns;\"></mat-row>\n\n                            <mat-cell *matNoDataRow>\n                                <td colspan=\"8\" style=\"padding: 15px;\">\n                                    No data matching the filter \"{{text_filter_completed_order.value}}\"\n                                </td>\n                            </mat-cell>\n                        </mat-table>\n\n                        <mat-paginator #completedOrderPaginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Cancelled\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Start date</mat-label>\n                        <input matInput [matDatepicker]=\"start_date_picker_cancelled_order\"\n                            [formControl]=\"cancelledOrderStartDateFilterFormControl\"\n                            [value]=\"cancelledOrderStartDateFilterFormControl.value\"\n                            (dateChange)=\"cancelledOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"start_date_picker_cancelled_order\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #start_date_picker_cancelled_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>End date</mat-label>\n                        <input matInput [matDatepicker]=\"end_date_picker_cancelled_order\"\n                            [formControl]=\"cancelledOrderEndDateFilterFormControl\"\n                            [value]=\"cancelledOrderEndDateFilterFormControl.value\"\n                            (dateChange)=\"cancelledOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"end_date_picker_cancelled_order\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #end_date_picker_cancelled_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"70\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Filter</mat-label>\n                        <input matInput (keyup)=\"applyCancelledOrderFilter($event)\" type=\"text\"\n                            #text_filter_cancelled_order maxlength=\"1000\" placeholder=\"Filter\">\n                        <mat-icon matSuffix>filter_alt</mat-icon>\n                        <mat-hint align=\"end\">{{text_filter_cancelled_order.value.length}} / 1000</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div [hidden]=\"cancelledOrderSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"cancelledOrderSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-table [dataSource]=\"cancelledOrderDataSource\" #cancelledOrderSort=\"matSort\" matSort\n                            style=\"overflow-x: scroll;\">\n                            <ng-container matColumnDef=\"ButtonView\">\n                                <mat-header-cell fxFlex=\"90px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"90px\" *matCellDef=\"let row\">\n                                    <button mat-stroked-button matTooltip=\"Click to view order details.\"\n                                        [matTooltipPosition]=\"'left'\" style=\"width: 100%; background-color: white;\"\n                                        (click)=\"buttonPreviewCancelledOrderClick(row)\">\n                                        <mat-icon matSuffix>preview</mat-icon>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderNumber\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order No.\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderNumber}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderDate\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order Date\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderDate}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductDescription\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Product</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.ProductDescription}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductPrice\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Price</mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\">\n                                    ₱ {{row.ProductPrice}}</mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Quantity\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Quantity\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\"> {{row.Quantity}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Amount\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Amount\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\"> ₱ {{row.Amount}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"BuyerFullName\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header>Buyer\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\"> {{row.BuyerFullName}} </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\" cancelledOrderDisplayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: cancelledOrderDisplayedColumns;\"></mat-row>\n\n                            <mat-cell *matNoDataRow>\n                                <td colspan=\"8\" style=\"padding: 15px;\">\n                                    No data matching the filter \"{{text_filter_cancelled_order.value}}\"\n                                </td>\n                            </mat-cell>\n                        </mat-table>\n\n                        <mat-paginator #cancelledOrderPaginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n</mat-tab-group>","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { OpenOrderDataInterface } from './order-data-interface/open-order-data-interface';\nimport { VerifiedOrderDataInterface } from './order-data-interface/verified-order-data-interface';\nimport { CompletedOrderDataInterface } from './order-data-interface/completed-order-data-interface';\nimport { CancelledOrderDataInterface } from './order-data-interface/cancelled-order-data-interface';\n\nimport { OrderDetailModel } from './order-detail-dialog/order-detail.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public listOpenOrderSubject = new Subject<OpenOrderDataInterface[]>();\n  public listOpenOrderObservable = this.listOpenOrderSubject.asObservable();\n  public listVerifiedOrderSubject = new Subject<VerifiedOrderDataInterface[]>();\n  public listVerifiedOrderObservable = this.listVerifiedOrderSubject.asObservable();\n  public listCompletedOrderSubject = new Subject<CompletedOrderDataInterface[]>();\n  public listCompletedOrderObservable = this.listCompletedOrderSubject.asObservable();\n  public listCancelledOrderSubject = new Subject<CancelledOrderDataInterface[]>();\n  public listCancelledOrderObservable = this.listCancelledOrderSubject.asObservable();\n  public verifyOrderSubject = new Subject<string[]>();\n  public verifyOrderObservable = this.verifyOrderSubject.asObservable();\n  public completeOrderSubject = new Subject<string[]>();\n  public completeOrderObservable = this.completeOrderSubject.asObservable();\n  public cancelOrderSubject = new Subject<string[]>();\n  public cancelOrderObservable = this.cancelOrderSubject.asObservable();\n\n  public orderDetailSubject = new Subject<OrderDetailModel>();\n  public orderDetailObservable = this.orderDetailSubject.asObservable();\n\n  public listOpenOrderData(startDate: string, endDate: string): void {\n    let openOrderData: OpenOrderDataInterface[] = [];\n    this.listOpenOrderSubject.next(openOrderData);\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/list/perSellerUser/\" + startDate + \"/\" + endDate + \"/Open\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results[\"length\"] > 0) {\n          for (let i = 0; i <= results[\"length\"] - 1; i++) {\n            openOrderData.push({\n              ButtonView: \"View\",\n              Id: results[i].id,\n              OrderNumber: results[i].orderNumber,\n              OrderDate: new Date(results[i].orderDate).toLocaleDateString(\"fr-CA\"),\n              ProductDescription: results[i].productDescription,\n              ProductPrice: (Math.round(results[i].productPrice * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              Quantity: results[i].quantity,\n              Amount: (Math.round(results[i].amount * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              BuyerFullName: results[i].buyerFullName,\n              ButtonVerify: \"Verify\",\n              ButtonCancel: \"Cancel\"\n            });\n          }\n        }\n\n        this.listOpenOrderSubject.next(openOrderData);\n      },\n      error => {\n        this.listOpenOrderSubject.next(openOrderData);\n      }\n    );\n  }\n\n  public listVerifiedOrderData(startDate: string, endDate: string): void {\n    let verifiedOrderData: VerifiedOrderDataInterface[] = [];\n    this.listVerifiedOrderSubject.next(verifiedOrderData);\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/list/perSellerUser/\" + startDate + \"/\" + endDate + \"/Verified\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results[\"length\"] > 0) {\n          for (let i = 0; i <= results[\"length\"] - 1; i++) {\n            verifiedOrderData.push({\n              ButtonView: \"View\",\n              Id: results[i].id,\n              OrderNumber: results[i].orderNumber,\n              OrderDate: new Date(results[i].orderDate).toLocaleDateString(\"fr-CA\"),\n              ProductDescription: results[i].productDescription,\n              ProductPrice: (Math.round(results[i].productPrice * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              Quantity: results[i].quantity,\n              Amount: (Math.round(results[i].amount * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              BuyerFullName: results[i].buyerFullName,\n              ButtonComplete: \"Complete\",\n              ButtonCancel: \"Cancel\"\n            });\n          }\n        }\n\n        this.listVerifiedOrderSubject.next(verifiedOrderData);\n      },\n      error => {\n        this.listVerifiedOrderSubject.next(verifiedOrderData);\n      }\n    );\n  }\n\n  public listCompletedOrderData(startDate: string, endDate: string): void {\n    let completedOrderData: CompletedOrderDataInterface[] = [];\n    this.listCompletedOrderSubject.next(completedOrderData);\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/list/perSellerUser/\" + startDate + \"/\" + endDate + \"/Completed\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results[\"length\"] > 0) {\n          for (let i = 0; i <= results[\"length\"] - 1; i++) {\n            completedOrderData.push({\n              ButtonView: \"View\",\n              Id: results[i].id,\n              OrderNumber: results[i].orderNumber,\n              OrderDate: new Date(results[i].orderDate).toLocaleDateString(\"fr-CA\"),\n              ProductDescription: results[i].productDescription,\n              ProductPrice: (Math.round(results[i].productPrice * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              Quantity: results[i].quantity,\n              Amount: (Math.round(results[i].amount * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              BuyerFullName: results[i].buyerFullName\n            });\n          }\n        }\n\n        this.listCompletedOrderSubject.next(completedOrderData);\n      },\n      error => {\n        this.listCompletedOrderSubject.next(completedOrderData);\n      }\n    );\n  }\n\n  public listCancelledOrderData(startDate: string, endDate: string): void {\n    let cancelledOrderData: CancelledOrderDataInterface[] = [];\n    this.listCancelledOrderSubject.next(cancelledOrderData);\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/list/perSellerUser/\" + startDate + \"/\" + endDate + \"/Cancelled\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results[\"length\"] > 0) {\n          for (let i = 0; i <= results[\"length\"] - 1; i++) {\n            cancelledOrderData.push({\n              ButtonView: \"View\",\n              Id: results[i].id,\n              OrderNumber: results[i].orderNumber,\n              OrderDate: new Date(results[i].orderDate).toLocaleDateString(\"fr-CA\"),\n              ProductDescription: results[i].productDescription,\n              ProductPrice: (Math.round(results[i].productPrice * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              Quantity: results[i].quantity,\n              Amount: (Math.round(results[i].amount * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              BuyerFullName: results[i].buyerFullName\n            });\n          }\n        }\n\n        this.listCancelledOrderSubject.next(cancelledOrderData);\n      },\n      error => {\n        this.listCancelledOrderSubject.next(cancelledOrderData);\n      }\n    );\n  }\n\n  public verifyOrder(id: number): void {\n    this.httpClient.put(this.defaultAPIURLHost + \"/api/TrnOrder/verify/\" + id, \"\", this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", \"\"];\n        this.verifyOrderSubject.next(responseResults);\n      },\n      error => {\n        let errorResults: string[] = [\"failed\", error[\"error\"]];\n        this.verifyOrderSubject.next(errorResults);\n      }\n    );\n  }\n\n  public completeOrder(id: number): void {\n    this.httpClient.put(this.defaultAPIURLHost + \"/api/TrnOrder/complete/\" + id, \"\", this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", \"\"];\n        this.completeOrderSubject.next(responseResults);\n      },\n      error => {\n        let errorResults: string[] = [\"failed\", error[\"error\"]];\n        this.completeOrderSubject.next(errorResults);\n      }\n    );\n  }\n\n  public cancelOrder(id: number): void {\n    this.httpClient.put(this.defaultAPIURLHost + \"/api/TrnOrder/cancel/\" + id, \"\", this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", \"\"];\n        this.cancelOrderSubject.next(responseResults);\n      },\n      error => {\n        let errorResults: string[] = [\"failed\", error[\"error\"]];\n        this.cancelOrderSubject.next(errorResults);\n      }\n    );\n  }\n\n  public orderDetail(id: number): void {\n    let orderDetailModel: OrderDetailModel = null;\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/detail/\" + id, this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results != null) {\n          orderDetailModel = {\n            Id: results[\"id\"],\n            OrderNumber: results[\"orderNumber\"],\n            OrderDate: new Date(results[\"orderDate\"]).toLocaleDateString(\"fr-CA\"),\n            ProductCode: results[\"productCode\"],\n            ProductManualCode: results[\"productManualCode\"],\n            ProductSKUCode: results[\"productSKUCode\"],\n            ProductDescription: results[\"productDescription\"],\n            Remarks: results[\"remarks\"],\n            ProductPrice: \"₱ \" + (Math.round(results[\"productPrice\"] * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n            Quantity: results[\"quantity\"],\n            Amount: \"₱ \" + (Math.round(results[\"amount\"] * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n            SellerUserName: results[\"sellerUserName\"],\n            SellerFullName: results[\"sellerFullName\"],\n            BuyerUserName: results[\"buyerUserName\"],\n            BuyerFullName: results[\"buyerFullName\"],\n            BuyerAddress: results[\"buyerAddress\"],\n            BuyerContactNumber: results[\"buyerContactNumber\"],\n            Status: results[\"status\"]\n          }\n        }\n\n        this.orderDetailSubject.next(orderDetailModel);\n      },\n      error => {\n        this.orderDetailSubject.next(null);\n      }\n    );\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ProductService } from '../product.service';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { AppSettings } from './../../../app-settings';\nimport { Router } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-product-create-order-link-dialog',\n  templateUrl: './product-create-order-link-dialog.component.html',\n  styleUrls: ['./product-create-order-link-dialog.component.css']\n})\nexport class ProductCreateOrderLinkDialogComponent implements OnInit {\n\n  constructor(\n    public productCreateOrderLinkDialogComponent: MatDialogRef<ProductCreateOrderLinkDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public productOrderLinkDialogData: any,\n    private snackBar: MatSnackBar,\n    public appSettings: AppSettings,\n    public router: Router,\n    @Inject(DOCUMENT) private document: Document\n  ) { }\n\n  public orderLink: string = \"\";\n\n  public generateOrderLink(): void {\n    const origin = this.document.location.origin;\n    this.orderLink = origin + \"/software-buyer-order/create-order/\" + this.productOrderLinkDialogData.productData.Id;\n  }\n\n  public buttonProductOrderLinkDialogCloseClick(): void {\n    this.productCreateOrderLinkDialogComponent.close();\n  }\n\n  ngOnInit(): void {\n    this.generateOrderLink();\n  }\n\n  ngOnDestroy() {\n  }\n}\n","<h1 mat-dialog-title>\n    Order Link\n</h1>\n<div mat-dialog-content>\n    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n        <div fxFlex=\"100\">\n            <p>Copy the order link</p>\n\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                <mat-label>Order Link</mat-label>\n                <input [(ngModel)]=\"orderLink\" [ngModelOptions]=\"{standalone: true}\" matInput #text_order_link\n                    maxlength=\"5000\" placeholder=\"https://\" />\n                <mat-icon matSuffix>share</mat-icon>\n                <mat-hint align=\"end\">{{text_order_link.value.length}} / 5000</mat-hint>\n            </mat-form-field>\n        </div>\n    </div>\n</div>\n<div mat-dialog-actions>\n    &nbsp;\n    <button mat-stroked-button (click)=\"buttonProductOrderLinkDialogCloseClick()\"\n        id=\"buttonProductOrderLinkDialogClose\">\n        <mat-icon matSuffix>close</mat-icon> Close\n    </button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ProductService } from '../product.service';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { AppSettings } from './../../../app-settings';\n\n@Component({\n  selector: 'app-product-delete-dialog',\n  templateUrl: './product-delete-dialog.component.html',\n  styleUrls: ['./product-delete-dialog.component.css']\n})\nexport class ProductDeleteDialogComponent implements OnInit {\n\n  constructor(\n    public productDeleteDialogComponent: MatDialogRef<ProductDeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public productDeleteDialogData: any,\n    public productService: ProductService,\n    private snackBar: MatSnackBar,\n    public appSettings: AppSettings\n  ) { }\n\n  public dialogTitle: string = \"Delete Product\";\n  public dialogContent: string = this.productDeleteDialogData.content;\n\n  public deleteProductSubscription: any;\n\n  public buttonProductDeleteDialogDeleteClick(): void {\n    let buttonProductDeleteDialogDelete: Element = document.getElementById(\"buttonProductDeleteDialogDelete\");\n    let buttonProductDeleteDialogClose: Element = document.getElementById(\"buttonProductDeleteDialogClose\");\n\n    buttonProductDeleteDialogDelete.setAttribute(\"disabled\", \"disabled\");\n    buttonProductDeleteDialogClose.setAttribute(\"disabled\", \"disabled\");\n\n    this.productService.deleteProduct(this.productDeleteDialogData.productData.Id);\n    this.deleteProductSubscription = this.productService.deleteProductObservable.subscribe(\n      data => {\n        if (data[0] == \"success\") {\n          this.snackBar.open('Product no. ' + this.productDeleteDialogData.productData.ProductCode + ' was successfully deleted!', '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"green-snackbar\"]\n          });\n\n          this.productDeleteDialogComponent.close(200);\n        } else if (data[0] == \"failed\") {\n          this.snackBar.open(data[1], '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"orange-snackbar\"]\n          });\n\n          buttonProductDeleteDialogDelete.removeAttribute(\"disabled\");\n          buttonProductDeleteDialogClose.removeAttribute(\"disabled\");\n        }\n\n        if (this.deleteProductSubscription != null) this.deleteProductSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public buttonProductDeleteDialogCloseClick(): void {\n    this.productDeleteDialogComponent.close();\n    if (this.deleteProductSubscription != null) this.deleteProductSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy() {\n    if (this.deleteProductSubscription != null) this.deleteProductSubscription.unsubscribe();\n  }\n}\n","<h1 mat-dialog-title>\n    {{ dialogTitle }}\n</h1>\n<div mat-dialog-content>\n    <p>{{ dialogContent }}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-flat-button color=\"warn\" (click)=\"buttonProductDeleteDialogDeleteClick()\"\n        id=\"buttonProductDeleteDialogDelete\">\n        <mat-icon matSuffix>delete</mat-icon> Delete\n    </button>\n    &nbsp;\n    <button mat-stroked-button (click)=\"buttonProductDeleteDialogCloseClick()\" id=\"buttonProductDeleteDialogClose\">\n        <mat-icon matSuffix>close</mat-icon> Close\n    </button>\n</div>","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ProductService } from '../product.service';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\nimport { AppSettings } from './../../../app-settings';\nimport { ProductModel } from './../product.model';\n\n@Component({\n  selector: 'app-product-detail-dialog',\n  templateUrl: './product-detail-dialog.component.html',\n  styleUrls: ['./product-detail-dialog.component.css']\n})\nexport class ProductDetailDialogComponent implements OnInit {\n\n  constructor(\n    public productDetailDialogComponent: MatDialogRef<ProductDetailDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public productDetailDialogData: any,\n    public productService: ProductService,\n    private snackBar: MatSnackBar,\n    public appSettings: AppSettings,\n    private uploadProductPhotoDialog: MatDialog,\n  ) { }\n\n  public dialogTitle: string = this.productDetailDialogData.title;\n  public dialogContent: string = this.productDetailDialogData.content;\n\n  public detailProductSubscription: any;\n  public detailProductModel: ProductModel = {\n    Id: 0,\n    ProductCode: \"\",\n    ProductManualCode: \"\",\n    ProductSKUCode: \"\",\n    ProductDescription: \"\",\n    Particulars: \"\",\n    ImageURL: \"\",\n    Price: 0,\n    SellerUserName: \"\",\n    SellerFullName: \"\",\n    Status: \"\",\n  };\n\n  public uploadProductPhotoSubscription: any;\n  @ViewChild(\"productPhoto\") productPhoto;\n\n  public saveProductSubscription: any;\n\n  public productDetailSpinnerHidden: boolean = false;\n  public productDetailNotFoundHidden: boolean = true;\n  public productDetailSpinnerContentHidden: boolean = true;\n\n  public detailProduct(id: number) {\n    this.productService.detailProduct(id);\n    this.detailProductSubscription = this.productService.detailProductObservable.subscribe(\n      data => {\n        if (data != null) {\n          this.detailProductModel = {\n            Id: data.Id,\n            ProductCode: data.ProductCode,\n            ProductManualCode: data.ProductManualCode,\n            ProductSKUCode: data.ProductSKUCode,\n            ProductDescription: data.ProductDescription,\n            Particulars: data.Particulars,\n            ImageURL: data.ImageURL,\n            Price: data.Price,\n            SellerUserName: data.SellerUserName,\n            SellerFullName: data.SellerFullName,\n            Status: data.Status,\n          };\n\n          this.productDetailSpinnerHidden = true;\n          this.productDetailNotFoundHidden = true;\n          this.productDetailSpinnerContentHidden = false;\n        } else {\n          this.productDetailSpinnerHidden = true;\n          this.productDetailNotFoundHidden = false;\n          this.productDetailSpinnerContentHidden = true;\n        }\n\n        let fi = this.productPhoto.nativeElement;\n        if (fi.files && fi.files[0]) {\n          let fileToUpload = fi.files[0];\n\n          let buttonProductUpload: Element = document.getElementById(\"buttonProductUpload\");\n          buttonProductUpload.removeAttribute(\"disabled\");\n        }\n\n        if (this.detailProductSubscription != null) this.detailProductSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public inputFileChange(): void {\n    let fi = this.productPhoto.nativeElement;\n    if (fi.files && fi.files[0]) {\n      let fileToUpload = fi.files[0];\n\n      let buttonProductUpload: Element = document.getElementById(\"buttonProductUpload\");\n      buttonProductUpload.removeAttribute(\"disabled\");\n    }\n  }\n\n  public buttonProductUploadClick(): void {\n    let buttonProductUpload: Element = document.getElementById(\"buttonProductUpload\");\n    buttonProductUpload.setAttribute(\"disabled\", \"disabled\");\n\n    let fi = this.productPhoto.nativeElement;\n\n    if (fi.files && fi.files[0]) {\n      let fileToUpload = fi.files[0];\n\n      this.productService.uploadProductPhoto(fileToUpload);\n      this.saveProductSubscription = this.productService.saveProductObservable.subscribe(\n        data => {\n          if (data[0] == \"success\") {\n\n            let imageURL = data[1];\n            this.detailProductModel.ImageURL = imageURL;\n\n            this.snackBar.open('Photo upload successful', '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"green-snackbar\"]\n            });\n          } else if (data[0] == \"failed\") {\n            this.snackBar.open(data[1], '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"orange-snackbar\"]\n            });\n          }\n\n          buttonProductUpload.removeAttribute(\"disabled\");\n          if (this.saveProductSubscription != null) this.saveProductSubscription.unsubscribe();\n        }\n      );\n    }\n  }\n\n  public buttonProductDetailDialogSaveClick(): void {\n    let buttonProductUpload: Element = document.getElementById(\"buttonProductUpload\");\n    let buttonProductDetailDialogSave: Element = document.getElementById(\"buttonProductDetailDialogSave\");\n    let buttonProductDetailDialogClose: Element = document.getElementById(\"buttonProductDetailDialogClose\");\n\n    buttonProductUpload.setAttribute(\"disabled\", \"disabled\");\n    buttonProductDetailDialogSave.setAttribute(\"disabled\", \"disabled\");\n    buttonProductDetailDialogClose.setAttribute(\"disabled\", \"disabled\");\n\n    let modelrrorMessage = \"\";\n    let isValid = false;\n\n    if (this.detailProductModel.ProductManualCode === \"\") {\n      modelrrorMessage = \"Product Manual Code is required.\";\n    } else if (this.detailProductModel.ProductSKUCode === \"\") {\n      modelrrorMessage = \"Product SKU Code required.\";\n    } else if (this.detailProductModel.ProductDescription === \"\") {\n      modelrrorMessage = \"Product Description is required.\";\n    } else if (this.detailProductModel.Particulars === \"\") {\n      modelrrorMessage = \"Particulars is required.\";\n    } else if (this.detailProductModel.Status === \"\") {\n      modelrrorMessage = \"Status is required.\";\n    } else {\n      isValid = true;\n    }\n\n    if (isValid == false) {\n      this.snackBar.open(modelrrorMessage, '', {\n        duration: 3000,\n        horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n        verticalPosition: this.appSettings.snackBarVerticalPosition,\n        panelClass: [\"orange-snackbar\"]\n      });\n\n      buttonProductUpload.removeAttribute(\"disabled\");\n      buttonProductDetailDialogSave.removeAttribute(\"disabled\");\n      buttonProductDetailDialogClose.removeAttribute(\"disabled\");\n    } else {\n      this.productService.saveProduct(this.detailProductModel);\n      this.saveProductSubscription = this.productService.saveProductObservable.subscribe(\n        data => {\n          if (data[0] == \"success\") {\n            this.snackBar.open(data[1], '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"green-snackbar\"]\n            });\n\n            this.productDetailDialogComponent.close(200);\n          } else if (data[0] == \"failed\") {\n            this.snackBar.open(data[1], '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"orange-snackbar\"]\n            });\n\n            buttonProductUpload.removeAttribute(\"disabled\");\n            buttonProductDetailDialogSave.removeAttribute(\"disabled\");\n            buttonProductDetailDialogClose.removeAttribute(\"disabled\");\n          }\n\n          if (this.saveProductSubscription != null) this.saveProductSubscription.unsubscribe();\n        }\n      );\n    }\n  }\n\n  public buttonProductDetailDialogCloseClick(): void {\n    this.productDetailDialogComponent.close();\n\n    if (this.detailProductSubscription != null) this.detailProductSubscription.unsubscribe();\n    if (this.saveProductSubscription != null) this.saveProductSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    if (this.productDetailDialogData.productData != null) {\n      this.detailProduct(this.productDetailDialogData.productData.Id);\n    } else {\n      this.detailProductModel = {\n        Id: 0,\n        ProductCode: \"0000000000\",\n        ProductManualCode: \"\",\n        ProductSKUCode: \"\",\n        ProductDescription: \"\",\n        Particulars: \"\",\n        ImageURL: \"\",\n        Price: 0,\n        SellerUserName: localStorage.getItem('username'),\n        SellerFullName: localStorage.getItem('full_name'),\n        Status: \"\",\n      };\n\n      this.productDetailSpinnerHidden = true;\n      this.productDetailNotFoundHidden = true;\n      this.productDetailSpinnerContentHidden = false;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.detailProductSubscription != null) this.detailProductSubscription.unsubscribe();\n    if (this.saveProductSubscription != null) this.saveProductSubscription.unsubscribe();\n  }\n}\n","<h1 mat-dialog-title>\n    {{ dialogTitle }}\n</h1>\n<mat-dialog-content>\n    <div [hidden]=\"productDetailSpinnerHidden\">\n        <mat-spinner class=\"spinner-center\"></mat-spinner>\n    </div>\n    <div [hidden]=\"productDetailNotFoundHidden\">\n        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n            <div fxFlex=\"35\"></div>\n            <div fxFlex=\"30\">\n                <div style=\"width: 100%; text-align: center;\">\n                    <img src=\"./../../../assets/dashboard-icons/error-404.png\" style=\"width: 100%;\" />\n                </div>\n            </div>\n            <div fxFlex=\"35\"></div>\n        </div>\n        <div style=\"width: 100%; text-align: center; font-size: 20px;\">\n            <p>Sorry. The product is not available or not found in the server. </p>\n        </div>\n    </div>\n    <div [hidden]=\"productDetailSpinnerContentHidden\">\n        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n            <div fxFlex=\"35\" style=\"margin: 5px;\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px; text-align: center;\">\n                        <mat-card>\n                            <img src=\"{{detailProductModel.ImageURL}}\" style=\"width: 70%;\" />\n                        </mat-card>\n                        <br />\n                        <input readonly #productPhoto type=\"file\" style=\"width: 100%;\" (change)=\"inputFileChange()\" />\n                        &nbsp;\n                        <button mat-flat-button color=\"accent\" (click)=\"buttonProductUploadClick()\"\n                            id=\"buttonProductUpload\" style=\"width: 100%;\" disabled>\n                            <mat-icon matSuffix>cloud_upload</mat-icon> Upload\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div fxFlex=\"65\" style=\"margin: 5px;\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Manual Code</mat-label>\n                            <input [(ngModel)]=\"detailProductModel.ProductManualCode\"\n                                [ngModelOptions]=\"{standalone: true}\" matInput #text_item_manual_code maxlength=\"250\"\n                                placeholder=\"4800011121529\" />\n                            <mat-icon matSuffix>view_array</mat-icon>\n                            <mat-hint align=\"end\">{{text_item_manual_code.value.length}} / 250</mat-hint>\n                        </mat-form-field>\n                    </div>\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>SKU Code</mat-label>\n                            <input [(ngModel)]=\"detailProductModel.ProductSKUCode\" [ngModelOptions]=\"{standalone: true}\"\n                                matInput #text_item_SKU_code maxlength=\"250\" placeholder=\"4800011121529\" />\n                            <mat-icon matSuffix>view_array</mat-icon>\n                            <mat-hint align=\"end\">{{text_item_SKU_code.value.length}} / 250</mat-hint>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Description</mat-label>\n                            <input [(ngModel)]=\"detailProductModel.ProductDescription\"\n                                [ngModelOptions]=\"{standalone: true}\" matInput #text_item_description maxlength=\"1000\"\n                                placeholder=\"Eg., Ethyl Alcohol (CASINO) 500mL\" />\n                            <mat-icon matSuffix>shop</mat-icon>\n                            <mat-hint align=\"end\">{{text_item_description.value.length}} / 1000</mat-hint>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Price</mat-label>\n                            <input type=\"number\" [(ngModel)]=\"detailProductModel.Price\"\n                                [ngModelOptions]=\"{standalone: true}\" matInput #text_item_price maxlength=\"100\"\n                                placeholder=\"0.00\" />\n                            <mat-icon matSuffix>local_offer</mat-icon>\n                            <mat-hint align=\"end\">{{text_item_price.value.length}} / 100</mat-hint>\n                        </mat-form-field>\n                    </div>\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Status</mat-label>\n                            <mat-select [(ngModel)]=\"detailProductModel.Status\" [ngModelOptions]=\"{standalone: true}\"\n                                [value]=\"'Active'\">\n                                <mat-option [value]=\"'Active'\">Active</mat-option>\n                                <mat-option [value]=\"'InActive'\">In-Active</mat-option>\n                            </mat-select>\n                            <mat-icon matSuffix>fact_check</mat-icon>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Particulars</mat-label>\n                            <textarea [(ngModel)]=\"detailProductModel.Particulars\" [ngModelOptions]=\"{standalone: true}\"\n                                matInput #text_item_particulars maxlength=\"5000\"\n                                placeholder=\"Eg., Ethyl Alcohol (CASINO) 500mL\" rows=\"5\"></textarea>\n                            <mat-icon matSuffix>subject</mat-icon>\n                            <mat-hint align=\"end\">{{text_item_particulars.value.length}} / 5000</mat-hint>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-flat-button color=\"primary\" (click)=\"buttonProductDetailDialogSaveClick()\"\n        id=\"buttonProductDetailDialogSave\">\n        <mat-icon matSuffix>save</mat-icon> Save\n    </button>\n    &nbsp;\n    <button mat-stroked-button (click)=\"buttonProductDetailDialogCloseClick()\" id=\"buttonProductDetailDialogClose\">\n        <mat-icon matSuffix>close</mat-icon> Close\n    </button>\n</mat-dialog-actions>","import { Component, OnInit, ViewChild, TemplateRef, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormControl } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nimport { ActiveProductDataInterface } from './product-data-interface/active-product-data-interface';\nimport { InActiveProductDataInterface } from './product-data-interface/inactive-product-data-interface';\n\nimport { ProductService } from './product.service';\n\nimport { ProductDetailDialogComponent } from './product-detail-dialog/product-detail-dialog.component';\nimport { ProductDeleteDialogComponent } from './product-delete-dialog/product-delete-dialog.component';\nimport { ProductCreateOrderLinkDialogComponent } from './product-create-order-link-dialog/product-create-order-link-dialog.component';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  constructor(\n    private productService: ProductService,\n    private productDetailDialog: MatDialog,\n    private productDeleteDialog: MatDialog,\n    private productCreateOrderLinkDialog: MatDialog,\n  ) { }\n\n  public activeProductDisplayedColumns: string[] = [\n    'ButtonEdit',\n    'ButtonDelete',\n    'ProductCode',\n    'ProductManualCode',\n    'ProductSKUCode',\n    'ProductDescription',\n    'Price',\n    'ButtonOrderLink'\n  ];\n  public activeProductDataSource: MatTableDataSource<ActiveProductDataInterface>;\n\n  @ViewChild('activeProductPaginator') public activeProductPaginator: MatPaginator;\n  @ViewChild('activeProductSort') public activeProductSort: MatSort;\n\n  public listActiveProductSubscription: any;\n  public activeProductData: ActiveProductDataInterface[] = []\n\n  public activeProductSpinnerHidden: boolean = false;\n  public activeProductSpinnerContentHidden: boolean = true;\n\n  public inActiveProductDisplayedColumns: string[] = [\n    'ButtonEdit',\n    'ButtonDelete',\n    'ProductCode',\n    'ProductManualCode',\n    'ProductSKUCode',\n    'ProductDescription',\n    'Price'\n  ];\n  public inActiveProductDataSource: MatTableDataSource<InActiveProductDataInterface>;\n\n  @ViewChild('inActiveProductPaginator') public inActiveProductPaginator: MatPaginator;\n  @ViewChild('inActiveProductSort') public inActiveProductSort: MatSort;\n\n  public listInActiveProductSubscription: any;\n  public inActiveProductData: InActiveProductDataInterface[] = []\n\n  public inActiveProductSpinnerHidden: boolean = false;\n  public inActiveProductSpinnerContentHidden: boolean = true;\n\n  public listActiveProduct() {\n    this.activeProductData = [];\n    this.activeProductDataSource = new MatTableDataSource(this.activeProductData);\n    this.activeProductDataSource.paginator = this.activeProductPaginator;\n    this.activeProductDataSource.sort = this.activeProductSort;\n\n    this.activeProductSpinnerHidden = false;\n    this.activeProductSpinnerContentHidden = true;\n\n    this.productService.listActiveProduct();\n    this.listActiveProductSubscription = this.productService.listActiveProductObservable.subscribe(\n      data => {\n        this.activeProductSpinnerHidden = true;\n        this.activeProductSpinnerContentHidden = false;\n\n        if (data.length > 0) {\n          this.activeProductData = data;\n          this.activeProductDataSource = new MatTableDataSource(this.activeProductData);\n          this.activeProductDataSource.paginator = this.activeProductPaginator;\n          this.activeProductDataSource.sort = this.activeProductSort;\n        }\n\n        if (this.listActiveProductSubscription != null) this.listActiveProductSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public applyActiveProductFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.activeProductDataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.activeProductDataSource.paginator) {\n      this.activeProductDataSource.paginator.firstPage();\n    }\n  }\n\n  public buttonEditActiveProductClick(activeProductData: ActiveProductDataInterface): void {\n    const openActiveProductDetailDialog = this.productDetailDialog.open(ProductDetailDialogComponent, {\n      width: '1000px',\n      data: {\n        title: \"Edit Product\",\n        content: \"\",\n        productData: activeProductData\n      },\n      disableClose: true\n    });\n\n    openActiveProductDetailDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listActiveProduct();\n        this.listInActiveProduct();\n      }\n    });\n  }\n\n  public buttonDeleteActiveProductClick(activeProductData: ActiveProductDataInterface): void {\n    const openActiveProductDeleteDialog = this.productDeleteDialog.open(ProductDeleteDialogComponent, {\n      width: '300px',\n      data: {\n        content: \"Are you sure you want to delete this product \" + activeProductData.ProductDescription + \"?\",\n        productData: activeProductData\n      },\n      disableClose: true\n    });\n\n    openActiveProductDeleteDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listActiveProduct();\n      }\n    });\n  }\n\n  public listInActiveProduct() {\n    this.inActiveProductData = [];\n    this.inActiveProductDataSource = new MatTableDataSource(this.inActiveProductData);\n    this.inActiveProductDataSource.paginator = this.inActiveProductPaginator;\n    this.inActiveProductDataSource.sort = this.inActiveProductSort;\n\n    this.inActiveProductSpinnerHidden = false;\n    this.inActiveProductSpinnerContentHidden = true;\n\n    this.productService.listInActiveProduct();\n    this.listInActiveProductSubscription = this.productService.listInActiveProductObservable.subscribe(\n      data => {\n        this.inActiveProductSpinnerHidden = true;\n        this.inActiveProductSpinnerContentHidden = false;\n\n        if (data.length > 0) {\n          this.inActiveProductData = data;\n          this.inActiveProductDataSource = new MatTableDataSource(this.inActiveProductData);\n          this.inActiveProductDataSource.paginator = this.inActiveProductPaginator;\n          this.inActiveProductDataSource.sort = this.inActiveProductSort;\n        }\n\n        if (this.listInActiveProductSubscription != null) this.listInActiveProductSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public applyInActiveProductFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.inActiveProductDataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.inActiveProductDataSource.paginator) {\n      this.inActiveProductDataSource.paginator.firstPage();\n    }\n  }\n\n  public buttonEditInActiveProductClick(inActiveProductData: InActiveProductDataInterface): void {\n    const openInActiveProductDetailDialog = this.productDetailDialog.open(ProductDetailDialogComponent, {\n      width: '1000px',\n      data: {\n        title: \"Edit Product\",\n        content: \"\",\n        productData: inActiveProductData\n      },\n      disableClose: true\n    });\n\n    openInActiveProductDetailDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listActiveProduct();\n        this.listInActiveProduct();\n      }\n    });\n  }\n\n  public buttonDeleteInActiveProductClick(inActiveProductData: InActiveProductDataInterface): void {\n    const openInActiveProductDeleteDialog = this.productDeleteDialog.open(ProductDeleteDialogComponent, {\n      width: '300px',\n      data: {\n        content: \"Are you sure you want to delete this product \" + inActiveProductData.ProductDescription + \"?\",\n        productData: inActiveProductData\n      },\n      disableClose: true\n    });\n\n    openInActiveProductDeleteDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listInActiveProduct();\n      }\n    });\n  }\n\n  public buttonAddProductClick(): void {\n    const openProductDetailDialog = this.productDetailDialog.open(ProductDetailDialogComponent, {\n      width: '1000px',\n      data: {\n        title: \"Add Product\",\n        content: \"\",\n        productData: null\n      },\n      disableClose: true\n    });\n\n    openProductDetailDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listActiveProduct();\n      }\n    });\n  }\n\n  public buttonOrderLinkClick(activeProductData: ActiveProductDataInterface): void {\n    const openProductCreateOrderLinkDialog = this.productCreateOrderLinkDialog.open(ProductCreateOrderLinkDialogComponent, {\n      width: '500px',\n      data: {\n        content: \"\",\n        productData: activeProductData\n      },\n      disableClose: true\n    });\n\n    openProductCreateOrderLinkDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.listActiveProduct();\n    this.listInActiveProduct();\n  }\n\n  ngOnDestroy() {\n    if (this.listActiveProductSubscription != null) this.listActiveProductSubscription.unsubscribe();\n    if (this.listInActiveProductSubscription != null) this.listInActiveProductSubscription.unsubscribe();\n  }\n\n}\n","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/product.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Products</span>\n    <span class=\"spacer\"></span>\n    <button mat-flat-button color=\"accent\" (click)=\"buttonAddProductClick()\">\n        <mat-icon matSuffix>add</mat-icon> Create Product\n    </button>\n</mat-toolbar>\n<mat-tab-group mat-align-tabs=\"start\">\n    <mat-tab label=\"Active\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"100\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Filter</mat-label>\n                        <input matInput (keyup)=\"applyActiveProductFilter($event)\" type=\"text\"\n                            #text_filter_active_product maxlength=\"1000\" placeholder=\"Filter\">\n                        <mat-icon matSuffix>filter_alt</mat-icon>\n                        <mat-hint align=\"end\">{{text_filter_active_product.value.length}} / 1000</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div [hidden]=\"activeProductSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"activeProductSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-table [dataSource]=\"activeProductDataSource\" #activeProductSort=\"matSort\" matSort\n                            style=\"overflow-x: scroll;\">\n                            <ng-container matColumnDef=\"ButtonEdit\">\n                                <mat-header-cell fxFlex=\"120px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"120px\" *matCellDef=\"let row\">\n                                    <button mat-flat-button color=\"primary\" style=\"width: 100%;\"\n                                        (click)=\"buttonEditActiveProductClick(row)\">\n                                        <mat-icon matSuffix>edit</mat-icon> {{row.ButtonEdit}}\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ButtonDelete\">\n                                <mat-header-cell fxFlex=\"110px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"110px\" *matCellDef=\"let row\">\n                                    <button mat-flat-button color=\"warn\" style=\"width: 100%;\"\n                                        (click)=\"buttonDeleteActiveProductClick(row)\">\n                                        <mat-icon matSuffix>delete</mat-icon> {{row.ButtonDelete}}\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductCode\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Code\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.ProductCode}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductManualCode\">\n                                <mat-header-cell fxFlex=\"120px\" *matHeaderCellDef mat-sort-header>Manual Code\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"120px\" *matCellDef=\"let row\"> {{row.ProductManualCode}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductSKUCode\">\n                                <mat-header-cell fxFlex=\"120px\" *matHeaderCellDef mat-sort-header>SKU Code\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"120px\" *matCellDef=\"let row\"> {{row.ProductSKUCode}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductDescription\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Description</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.ProductDescription}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Price\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Price\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\" class=\"cell-align-right\">\n                                    {{row.Price}}</mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ButtonOrderLink\">\n                                <mat-header-cell fxFlex=\"90px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"90px\" *matCellDef=\"let row\">\n                                    <button mat-stroked-button matTooltip=\"Generate order link\"\n                                        [matTooltipPosition]=\"'right'\" style=\"width: 100%; background-color: white;\"\n                                        (click)=\"buttonOrderLinkClick(row)\">\n                                        <mat-icon matSuffix>share</mat-icon>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\" activeProductDisplayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: activeProductDisplayedColumns;\"></mat-row>\n\n                            <mat-cell *matNoDataRow>\n                                <td colspan=\"7\" style=\"padding: 15px;\">\n                                    No data matching the filter \"{{text_filter_active_product.value}}\"\n                                </td>\n                            </mat-cell>\n                        </mat-table>\n\n                        <mat-paginator #activeProductPaginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"In-Active\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"100\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Filter</mat-label>\n                        <input matInput (keyup)=\"applyInActiveProductFilter($event)\" type=\"text\"\n                            #text_filter_inactive_product maxlength=\"1000\" placeholder=\"Filter\">\n                        <mat-icon matSuffix>filter_alt</mat-icon>\n                        <mat-hint align=\"end\">{{text_filter_inactive_product.value.length}} / 1000</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div [hidden]=\"inActiveProductSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"inActiveProductSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-table [dataSource]=\"inActiveProductDataSource\" #inActiveProductSort=\"matSort\" matSort\n                            style=\"overflow-x: scroll;\">\n                            <ng-container matColumnDef=\"ButtonEdit\">\n                                <mat-header-cell fxFlex=\"120px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"120px\" *matCellDef=\"let row\">\n                                    <button mat-flat-button color=\"primary\" style=\"width: 100%;\"\n                                        (click)=\"buttonEditInActiveProductClick(row)\">\n                                        <mat-icon matSuffix>edit</mat-icon> {{row.ButtonEdit}}\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ButtonDelete\">\n                                <mat-header-cell fxFlex=\"110px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"110px\" *matCellDef=\"let row\">\n                                    <button mat-flat-button color=\"warn\" style=\"width: 100%;\"\n                                        (click)=\"buttonDeleteInActiveProductClick(row)\">\n                                        <mat-icon matSuffix>delete</mat-icon> {{row.ButtonDelete}}\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductCode\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Code\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.ProductCode}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductManualCode\">\n                                <mat-header-cell fxFlex=\"120px\" *matHeaderCellDef mat-sort-header>Manual Code\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"120px\" *matCellDef=\"let row\"> {{row.ProductManualCode}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductSKUCode\">\n                                <mat-header-cell fxFlex=\"120px\" *matHeaderCellDef mat-sort-header>SKU Code\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"120px\" *matCellDef=\"let row\"> {{row.ProductSKUCode}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductDescription\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Description</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.ProductDescription}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Price\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Price\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\" class=\"cell-align-right\">\n                                    {{row.Price}}</mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\" inActiveProductDisplayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: inActiveProductDisplayedColumns;\"></mat-row>\n\n                            <mat-cell *matNoDataRow>\n                                <td colspan=\"7\" style=\"padding: 15px;\">\n                                    No data matching the filter \"{{text_filter_inactive_product.value}}\"\n                                </td>\n                            </mat-cell>\n                        </mat-table>\n\n                        <mat-paginator #inActiveProductPaginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n</mat-tab-group>","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { ActiveProductDataInterface } from './product-data-interface/active-product-data-interface';\nimport { InActiveProductDataInterface } from './product-data-interface/inactive-product-data-interface';\n\nimport { ProductModel } from './product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public listActiveProductSubject = new Subject<ActiveProductDataInterface[]>();\n  public listActiveProductObservable = this.listActiveProductSubject.asObservable();\n  public listInActiveProductSubject = new Subject<InActiveProductDataInterface[]>();\n  public listInActiveProductObservable = this.listInActiveProductSubject.asObservable();\n\n  public detailProductSubject = new Subject<ProductModel>();\n  public detailProductObservable = this.detailProductSubject.asObservable();\n\n  public saveProductSubject = new Subject<string[]>();\n  public saveProductObservable = this.saveProductSubject.asObservable();\n  public deleteProductSubject = new Subject<string[]>();\n  public deleteProductObservable = this.deleteProductSubject.asObservable();\n\n  public listActiveProduct(): void {\n    let listActiveProductDataInterface: ActiveProductDataInterface[] = [];\n    this.listActiveProductSubject.next(listActiveProductDataInterface);\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstProduct/list/Active\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results[\"length\"] > 0) {\n          for (let i = 0; i <= results[\"length\"] - 1; i++) {\n            listActiveProductDataInterface.push({\n              ButtonEdit: \"Edit\",\n              ButtonDelete: \"Delete\",\n              Id: results[i].id,\n              ProductCode: results[i].productCode,\n              ProductManualCode: results[i].productManualCode,\n              ProductSKUCode: results[i].productSKUCode,\n              ProductDescription: results[i].productDescription,\n              Price: results[i].price,\n              ButtonOrderLink: \"Order Link\"\n            });\n          }\n        }\n\n        this.listActiveProductSubject.next(listActiveProductDataInterface);\n      },\n      error => {\n        this.listActiveProductSubject.next(listActiveProductDataInterface);\n      }\n    );\n  }\n\n  public listInActiveProduct(): void {\n    let listInActiveProductDataInterface: InActiveProductDataInterface[] = [];\n    this.listInActiveProductSubject.next(listInActiveProductDataInterface);\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstProduct/list/InActive\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results[\"length\"] > 0) {\n          for (let i = 0; i <= results[\"length\"] - 1; i++) {\n            listInActiveProductDataInterface.push({\n              ButtonEdit: \"Edit\",\n              ButtonDelete: \"Delete\",\n              Id: results[i].id,\n              ProductCode: results[i].productCode,\n              ProductManualCode: results[i].productManualCode,\n              ProductSKUCode: results[i].productSKUCode,\n              ProductDescription: results[i].productDescription,\n              Price: results[i].price\n            });\n          }\n        }\n\n        this.listInActiveProductSubject.next(listInActiveProductDataInterface);\n      },\n      error => {\n        this.listInActiveProductSubject.next(listInActiveProductDataInterface);\n      }\n    );\n  }\n\n  public detailProduct(id: number): void {\n    let productModel: ProductModel = null;\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstProduct/detail/\" + id, this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results != null) {\n          productModel = {\n            Id: results[\"id\"],\n            ProductCode: results[\"productCode\"],\n            ProductManualCode: results[\"productManualCode\"],\n            ProductSKUCode: results[\"productSKUCode\"],\n            ProductDescription: results[\"productDescription\"],\n            Particulars: results[\"particulars\"],\n            ImageURL: results[\"imageURL\"],\n            Price: results[\"price\"],\n            SellerUserName: results[\"sellerUserName\"],\n            SellerFullName: results[\"sellerFullName\"],\n            Status: results[\"status\"]\n          }\n        }\n\n        this.detailProductSubject.next(productModel);\n      },\n      error => {\n        this.detailProductSubject.next(null);\n      }\n    );\n  }\n\n  public saveProduct(productModel: ProductModel): void {\n    if (productModel.Id == 0) {\n      this.httpClient.post(this.defaultAPIURLHost + \"/api/MstProduct/add\", JSON.stringify(productModel), this.options).subscribe(\n        response => {\n          let responseResults: string[] = [\"success\", 'Product ' + productModel.ProductDescription + ' was successfully created!'];\n          this.saveProductSubject.next(responseResults);\n        },\n        error => {\n          let errorMessage = \"\";\n\n          if (error.error.errors != null) {\n            for (var errorField in error.error.errors) {\n              if (errorField != null) {\n                for (let i = 0; i < error.error.errors[errorField].length; i++) {\n                  errorMessage = error.error.errors[errorField][i];\n                  break;\n                }\n              }\n            }\n          } else {\n            errorMessage = error[\"error\"];\n          }\n\n          let errorResults: string[] = [\"failed\", errorMessage];\n          this.saveProductSubject.next(errorResults);\n        }\n      );\n    } else {\n      this.httpClient.put(this.defaultAPIURLHost + \"/api/MstProduct/update/\" + productModel.Id, JSON.stringify(productModel), this.options).subscribe(\n        response => {\n          let responseResults: string[] = [\"success\", 'Product ' + productModel.ProductDescription + ' was successfully updated!'];\n          this.saveProductSubject.next(responseResults);\n        },\n        error => {\n          let errorMessage = \"\";\n\n          if (error.error.errors != null) {\n            for (var errorField in error.error.errors) {\n              if (errorField != null) {\n                for (let i = 0; i < error.error.errors[errorField].length; i++) {\n                  errorMessage = error.error.errors[errorField][i];\n                  break;\n                }\n              }\n            }\n          } else {\n            errorMessage = error[\"error\"];\n          }\n\n          let errorResults: string[] = [\"failed\", errorMessage];\n          this.saveProductSubject.next(errorResults);\n        }\n      );\n    }\n  }\n\n  public deleteProduct(id: number): void {\n    this.httpClient.delete(this.defaultAPIURLHost + \"/api/MstProduct/delete/\" + id, this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", \"\"];\n        this.deleteProductSubject.next(responseResults);\n      },\n      error => {\n        let errorResults: string[] = [\"failed\", error[\"error\"]];\n        this.deleteProductSubject.next(errorResults);\n      }\n    );\n  }\n\n  public uploadProductPhoto(fileToUpload: any): void {\n    let imageOptions: any = {\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n      })\n    };\n\n    let input = new FormData();\n    input.append(\"file\", fileToUpload);\n\n    this.httpClient.post(this.defaultAPIURLHost + \"/api/MstProduct/uploadPhoto\", input, imageOptions).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", response.toString()];\n        this.saveProductSubject.next(responseResults);\n      },\n      error => {\n        let errorResults: string[] = [\"failed\", error[\"error\"]];\n        this.saveProductSubject.next(errorResults);\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { ProfileService } from './profile.service';\nimport { ProfileUserModel } from './profile-user.model';\nimport { ProfileSecurityModel } from './profile-security.model';\n\nimport { AppSettings } from './../../app-settings';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public profileService: ProfileService,\n    public appSettings: AppSettings,\n    private snackBar: MatSnackBar\n  ) { }\n\n  public profileUserSubscription: any;\n  public profileUserModel: ProfileUserModel = {\n    Id: 0,\n    UserType: \"Buyer\",\n    UserName: localStorage.getItem('username'),\n    Password: \"NA\",\n    FullName: \"\",\n    Address: \"\",\n    ContactNumber: \"\",\n    EmailAddress: \"\",\n    Status: \"NA\"\n  };\n\n  public updateProfileUserSubscription: any;\n  public updateProfileSecuritySubscription: any;\n\n  public profileSecurityModel: ProfileSecurityModel = {\n    CurrentPassword: \"\",\n    NewPassword: \"\",\n    ConfirmPassword: \"\"\n  };\n\n  public profileSpinnerHidden: boolean = false;\n  public profileSpinnerContentHidden: boolean = true;\n\n  public getProfileUserData(): void {\n    this.profileService.profileUser();\n    this.profileUserSubscription = this.profileService.profileUserObservable.subscribe(\n      data => {\n        if (data != null) {\n          this.profileUserModel = {\n            Id: data.Id,\n            UserType: data.UserType,\n            UserName: data.UserName,\n            Password: \"NA\",\n            FullName: data.FullName,\n            Address: data.Address,\n            ContactNumber: data.ContactNumber,\n            EmailAddress: data.EmailAddress,\n            Status: data.Status\n          };\n        }\n\n        this.profileSpinnerHidden = true;\n        this.profileSpinnerContentHidden = false;\n\n        if (this.profileUserSubscription != null) this.profileUserSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public buttonUpdateProfileClick(): void {\n    let buttonUpdateProfile: Element = document.getElementById(\"buttonUpdateProfile\");\n    buttonUpdateProfile.setAttribute(\"disabled\", \"disabled\");\n\n    let modelrrorMessage = \"\";\n    let isValid = false;\n\n    if (this.profileUserModel.FullName === \"\") {\n      modelrrorMessage = \"Full name is required.\";\n    } else if (this.profileUserModel.Address === \"\") {\n      modelrrorMessage = \"Address required.\";\n    } else if (this.profileUserModel.ContactNumber === \"\") {\n      modelrrorMessage = \"Contact number is required.\";\n    } else if (this.profileUserModel.EmailAddress === \"\") {\n      modelrrorMessage = \"Email address is required.\";\n    } else {\n      isValid = true;\n    }\n\n    if (isValid == false) {\n      this.snackBar.open(modelrrorMessage, '', {\n        duration: 3000,\n        horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n        verticalPosition: this.appSettings.snackBarVerticalPosition,\n        panelClass: [\"orange-snackbar\"]\n      });\n\n      buttonUpdateProfile.removeAttribute(\"disabled\");\n    } else {\n      this.profileService.updateProfile(this.profileUserModel);\n      this.updateProfileUserSubscription = this.profileService.updateProfileObservable.subscribe(\n        data => {\n          if (data[0] == \"success\") {\n            this.snackBar.open('Profile update successful.', '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"green-snackbar\"]\n            });\n          } else if (data[0] == \"failed\") {\n            this.snackBar.open(data[1], '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"orange-snackbar\"]\n            });\n          }\n\n          buttonUpdateProfile.removeAttribute(\"disabled\");\n          if (this.updateProfileUserSubscription != null) this.updateProfileUserSubscription.unsubscribe();\n        }\n      );\n    }\n  }\n\n  public buttonUpdateSecurityClick(): void {\n    let buttonUpdateSecurity: Element = document.getElementById(\"buttonUpdateSecurity\");\n    buttonUpdateSecurity.setAttribute(\"disabled\", \"disabled\");\n\n    let modelrrorMessage = \"\";\n    let isValid = false;\n\n    if (this.profileSecurityModel.CurrentPassword === \"\") {\n      modelrrorMessage = \"Current password is required.\";\n    } else if (this.profileSecurityModel.NewPassword === \"\") {\n      modelrrorMessage = \"New password is required.\";\n    } else if (this.profileSecurityModel.ConfirmPassword === \"\") {\n      modelrrorMessage = \"Confirm password is required.\";\n    } else if (this.profileSecurityModel.NewPassword !== this.profileSecurityModel.ConfirmPassword) {\n      modelrrorMessage = \"New password and confirm password did not match.\";\n    } else {\n      isValid = true;\n    }\n\n    if (isValid == false) {\n      this.snackBar.open(modelrrorMessage, '', {\n        duration: 3000,\n        horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n        verticalPosition: this.appSettings.snackBarVerticalPosition,\n        panelClass: [\"orange-snackbar\"]\n      });\n\n      buttonUpdateSecurity.removeAttribute(\"disabled\");\n    } else {\n      this.profileService.updateSecurity(this.profileSecurityModel);\n      this.updateProfileSecuritySubscription = this.profileService.updateSecurityObservable.subscribe(\n        data => {\n          if (data[0] == \"success\") {\n            this.snackBar.open('Security update successful.', '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"green-snackbar\"]\n            });\n          } else if (data[0] == \"failed\") {\n            this.snackBar.open(data[1], '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"orange-snackbar\"]\n            });\n          }\n\n          buttonUpdateSecurity.removeAttribute(\"disabled\");\n          if (this.updateProfileSecuritySubscription != null) this.updateProfileSecuritySubscription.unsubscribe();\n        }\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    this.getProfileUserData();\n  }\n\n  ngOnDestroy() {\n    if (this.profileUserSubscription != null) this.profileUserSubscription.unsubscribe();\n    if (this.updateProfileUserSubscription != null) this.updateProfileUserSubscription.unsubscribe();\n    if (this.updateProfileSecuritySubscription != null) this.updateProfileSecuritySubscription.unsubscribe();\n  }\n\n}\n","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/profile.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Profile</span>\n    <span class=\"spacer\"></span>\n</mat-toolbar>\n<mat-tab-group mat-align-tabs=\"start\">\n    <mat-tab label=\"About\">\n        <div class=\"software-container\">\n            <div [hidden]=\"profileSpinnerHidden\">\n                <div class=\"software-container\">\n                    <div style=\"width: 100%; text-align: center;\">\n                        Please wait...\n                    </div>\n                    <br />\n                    <mat-spinner class=\"spinner-center\"></mat-spinner>\n                </div>\n            </div>\n            <div [hidden]=\"profileSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Full Name</mat-label>\n                            <input matInput [(ngModel)]=\"profileUserModel.FullName\"\n                                [ngModelOptions]=\"{standalone: true}\" #text_full_name maxlength=\"250\" placeholder=\"\" />\n                            <mat-icon matSuffix>person</mat-icon>\n                            <mat-hint align=\"end\">{{text_full_name.value.length}} / 250</mat-hint>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Address</mat-label>\n                            <textarea matInput [(ngModel)]=\"profileUserModel.Address\"\n                                [ngModelOptions]=\"{standalone: true}\" #text_address maxlength=\"1000\" placeholder=\"\"\n                                rows=\"10\"></textarea>\n                            <mat-icon matSuffix>location_on</mat-icon>\n                            <mat-hint align=\"end\">{{text_address.value.length}} / 1000</mat-hint>\n                        </mat-form-field>\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"50\" style=\"margin-right: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Contact Number</mat-label>\n                                    <input matInput [(ngModel)]=\"profileUserModel.ContactNumber\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_contact_number maxlength=\"250\"\n                                        placeholder=\"\" />\n                                    <mat-icon matSuffix>phone_iphone</mat-icon>\n                                    <mat-hint align=\"end\">{{text_contact_number.value.length}} / 250</mat-hint>\n                                </mat-form-field>\n                            </div>\n                            <div fxFlex=\"50\" style=\"margin-left: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Email Address</mat-label>\n                                    <input matInput [(ngModel)]=\"profileUserModel.EmailAddress\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_email_address maxlength=\"250\"\n                                        placeholder=\"\" />\n                                    <mat-icon matSuffix>email</mat-icon>\n                                    <mat-hint align=\"end\">{{text_email_address.value.length}} / 250</mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <br />\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"50\" style=\"margin-right: 5px;\">\n                                <button mat-flat-button color=\"primary\"\n                                    style=\"width: 100%; padding-top: 10px; padding-bottom: 10px;\"\n                                    id=\"buttonUpdateProfile\" (click)=\"buttonUpdateProfileClick()\">\n                                    <mat-icon matSuffix>checkmark</mat-icon> Update\n                                </button>\n                            </div>\n                            <div fxFlex=\"50\" style=\"margin-left: 5px;\">\n\n                            </div>\n                        </div>\n                    </div>\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Security\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"25\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Username</mat-label>\n                        <input readonly matInput [(ngModel)]=\"profileUserModel.UserName\"\n                            [ngModelOptions]=\"{standalone: true}\" #text_username maxlength=\"100\" placeholder=\"Username\">\n                        <mat-icon matSuffix>vpn_key</mat-icon>\n                        <mat-hint align=\"end\">{{text_username.value.length}} / 100</mat-hint>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Current Password</mat-label>\n                        <input type=\"password\" matInput [(ngModel)]=\"profileSecurityModel.CurrentPassword\"\n                            [ngModelOptions]=\"{standalone: true}\" #text_current_password maxlength=\"250\"\n                            placeholder=\"\" />\n                        <mat-icon matSuffix>security</mat-icon>\n                        <mat-hint align=\"end\">{{text_current_password.value.length}} / 250</mat-hint>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Password</mat-label>\n                        <input type=\"password\" matInput [(ngModel)]=\"profileSecurityModel.NewPassword\"\n                            [ngModelOptions]=\"{standalone: true}\" #text_password maxlength=\"250\" placeholder=\"\" />\n                        <mat-icon matSuffix>security</mat-icon>\n                        <mat-hint align=\"end\">{{text_password.value.length}} / 250</mat-hint>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Confirm Password</mat-label>\n                        <input type=\"password\" matInput [(ngModel)]=\"profileSecurityModel.ConfirmPassword\"\n                            [ngModelOptions]=\"{standalone: true}\" #text_confirm_password maxlength=\"250\"\n                            placeholder=\"\" />\n                        <mat-icon matSuffix>security</mat-icon>\n                        <mat-hint align=\"end\">{{text_confirm_password.value.length}} / 250</mat-hint>\n                    </mat-form-field>\n                    <br />\n                    <br />\n                    <button mat-flat-button color=\"primary\"\n                        style=\"width: 100%; padding-top: 10px; padding-bottom: 10px;\" id=\"buttonUpdateSecurity\"\n                        (click)=\"buttonUpdateSecurityClick()\">\n                        <mat-icon matSuffix>checkmark</mat-icon> Update\n                    </button>\n                </div>\n                <div fxFlex=\"75\" style=\"margin: 5px;\">\n\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n</mat-tab-group>","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { ProfileUserModel } from './profile-user.model';\nimport { ProfileSecurityModel } from './profile-security.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public profileUserSubject = new Subject<ProfileUserModel>();\n  public profileUserObservable = this.profileUserSubject.asObservable();\n\n  public updateProfileSubject = new Subject<string[]>();\n  public updateProfileObservable = this.updateProfileSubject.asObservable();\n  public updateSecuritySubject = new Subject<string[]>();\n  public updateSecurityObservable = this.updateSecuritySubject.asObservable();\n\n  public profileUser(): void {\n    let profileUserModel: ProfileUserModel = null;\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstUser/profile\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results != null) {\n          profileUserModel = {\n            Id: results[\"id\"],\n            UserType: results[\"userType\"],\n            UserName: results[\"userName\"],\n            Password: results[\"password\"],\n            FullName: results[\"fullName\"],\n            Address: results[\"address\"],\n            ContactNumber: results[\"contactNumber\"],\n            EmailAddress: results[\"emailAddress\"],\n            Status: results[\"status\"]\n          }\n        }\n\n        this.profileUserSubject.next(profileUserModel);\n      },\n      error => {\n        this.profileUserSubject.next(null);\n      }\n    );\n  }\n\n  public updateProfile(profileUserModel: ProfileUserModel): void {\n    this.httpClient.put(this.defaultAPIURLHost + \"/api/MstUser/profile/update\", JSON.stringify(profileUserModel), this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", \"\"];\n        this.updateProfileSubject.next(responseResults);\n      },\n      error => {\n        let errorMessage = \"\";\n\n        if (error.error.errors != null) {\n          for (var errorField in error.error.errors) {\n            if (errorField != null) {\n              for (let i = 0; i < error.error.errors[errorField].length; i++) {\n                errorMessage = error.error.errors[errorField][i];\n                break;\n              }\n            }\n          }\n        } else {\n          errorMessage = error[\"error\"];\n        }\n\n        let errorResults: string[] = [\"failed\", errorMessage];\n        this.updateProfileSubject.next(errorResults);\n      }\n    );\n  }\n\n  public updateSecurity(profileSecurityModel: ProfileSecurityModel): void {\n    this.httpClient.put(this.defaultAPIURLHost + \"/api/MstUser/security/update\", JSON.stringify(profileSecurityModel), this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", \"\"];\n        this.updateSecuritySubject.next(responseResults);\n      },\n      error => {\n        let errorMessage = \"\";\n\n        if (error.error.errors != null) {\n          for (var errorField in error.error.errors) {\n            if (errorField != null) {\n              for (let i = 0; i < error.error.errors[errorField].length; i++) {\n                errorMessage = error.error.errors[errorField][i];\n                break;\n              }\n            }\n          }\n        } else {\n          errorMessage = error[\"error\"];\n        }\n\n        let errorResults: string[] = [\"failed\", errorMessage];\n        this.updateSecuritySubject.next(errorResults);\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SoftwareSellerRouterActivate } from './software-seller.router.activate';\n\nimport { SoftwareSellerComponent } from './software-seller.component';\nimport { DashboardComponent } from '../software-seller/dashboard/dashboard.component';\nimport { ProductComponent } from '../software-seller/product/product.component';\nimport { OrderComponent } from '../software-seller/order/order.component';\nimport { ProfileComponent } from '../software-seller/profile/profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [SoftwareSellerRouterActivate],\n    component: SoftwareSellerComponent,\n    children: [\n      { path: '', canActivate: [SoftwareSellerRouterActivate], component: DashboardComponent },\n      { path: 'product', canActivate: [SoftwareSellerRouterActivate], component: ProductComponent },\n      { path: 'order', canActivate: [SoftwareSellerRouterActivate], component: OrderComponent },\n      { path: 'profile', canActivate: [SoftwareSellerRouterActivate], component: ProfileComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SoftwareSellerRoutingModule { }\n","import { Component, OnInit, ChangeDetectorRef, OnDestroy, ViewChild } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-software-seller',\n  templateUrl: './software-seller.component.html',\n  styleUrls: ['./software-seller.component.css']\n})\nexport class SoftwareSellerComponent implements OnInit {\n  public mobileQuery: MediaQueryList;\n  private _mobileQueryListener: () => void;\n  public currentUserName: string = localStorage.getItem('full_name');\n  public currentUserType: string = localStorage.getItem('user_type');\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    private router: Router\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  public logOut(): void {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('expires_in');\n    localStorage.removeItem('username');\n    localStorage.removeItem('full_name');\n    localStorage.removeItem('user_type');\n\n    setTimeout(() => {\n      location.reload();\n    }, 500);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"main-container\" [class.main-is-mobile]=\"mobileQuery.matches\">\n    <mat-toolbar color=\"\" class=\"main-toolbar\">\n        <button mat-icon-button (click)=\"snav.toggle()\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <a routerLink=\"/software-buyer/\">\n            <img src=\"./../../assets/logo/ordercliq_logo_nav.png\" style=\"margin-top: 10px;\" height=\"20\" />\n        </a>\n    </mat-toolbar>\n\n    <mat-sidenav-container class=\"sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\n        <mat-sidenav #snav [mode]=\"mobileQuery.matches ? 'over' : 'side'\" [fixedInViewport]=\"mobileQuery.matches\"\n            fixedTopGap=\"56\" opened class=\"sidenav\">\n\n            <mat-card style=\"margin: 15px; border-radius: 2px;\">\n                <div style=\"text-align: center;\">\n                    <img src=\"../../assets/dashboard-icons/buyer.png\" height=\"60\" style=\"margin-bottom: 5px;\" />\n                    <br />\n                    <div\n                        style=\"text-overflow: ellipsis; overflow: hidden; width: 100%; height: 1.2em; white-space: nowrap; margin-bottom: 5px;\">\n                        <span style=\"font-size: 17.5px;\">{{currentUserName}}</span>\n                    </div>\n                    <div\n                        style=\"text-overflow: ellipsis; overflow: hidden; width: 100%; height: 1.2em; white-space: nowrap;\">\n                        {{currentUserType}}\n                    </div>\n                </div>\n            </mat-card>\n\n            <mat-nav-list>\n                <a mat-list-item routerLink=\"/software-seller\" style=\"color: white;\">\n                    <img src=\"../../assets/dashboard-icons/dashboard.png\" height=\"30\" />\n                    &nbsp;&nbsp; Dashboard\n                </a>\n                <a mat-list-item routerLink=\"/software-seller/order\" style=\"color: white;\">\n                    <img src=\"../../assets/dashboard-icons/order.png\" height=\"30\" />\n                    &nbsp;&nbsp; Orders\n                </a>\n                <a mat-list-item routerLink=\"/software-seller/product\" style=\"color: white;\">\n                    <img src=\"../../assets/dashboard-icons/product.png\" height=\"30\" />\n                    &nbsp;&nbsp; Products\n                </a>\n                <a mat-list-item routerLink=\"/software-seller/profile\" style=\"color: white;\">\n                    <img src=\"../../assets/dashboard-icons/profile.png\" height=\"30\" />\n                    &nbsp;&nbsp; Profile\n                </a>\n                <a mat-list-item (click)=\"logOut()\" style=\"color: white;\">\n                    <img src=\"../../assets/dashboard-icons/logout.png\" height=\"30\" />\n                    &nbsp;&nbsp; Logout\n                </a>\n            </mat-nav-list>\n        </mat-sidenav>\n\n        <mat-sidenav-content>\n            <router-outlet></router-outlet>\n            <br />\n            <br />\n        </mat-sidenav-content>\n    </mat-sidenav-container>\n\n    <footer class=\"footer\">\n        <div style=\"margin-top: 3px; font-size: 15px;\">\n            &nbsp; © 2020 <b>ordercliq.com</b>\n        </div>\n        <span class=\"spacer\"></span>\n        <a href=\"#\">\n            <img src=\"../../assets/footer/facebook.png\" height=\"25\"\n                style=\"vertical-align: middle; margin-right: 10px;\" />\n        </a>\n        <a href=\"#\">\n            <img src=\"../../assets/footer/instagram.png\" height=\"25\"\n                style=\"vertical-align: middle; margin-right: 10px;\" />\n        </a>\n        <a href=\"#\">\n            <img src=\"../../assets/footer/twitter.png\" height=\"25\"\n                style=\"vertical-align: middle; margin-right: 10px;\" />\n        </a>\n        &nbsp;\n        &nbsp;\n        &nbsp;\n        &nbsp;\n    </footer>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SoftwareSellerRoutingModule } from './software-seller-routing.module';\nimport { SoftwareSellerRouterActivate } from './software-seller.router.activate';\n\nimport { SoftwareSellerComponent } from './software-seller.component';\nimport { ProductComponent } from './product/product.component';\nimport { ProductDetailDialogComponent } from './product/product-detail-dialog/product-detail-dialog.component';\nimport { ProductDeleteDialogComponent } from './product/product-delete-dialog/product-delete-dialog.component';\nimport { ProductCreateOrderLinkDialogComponent } from './product/product-create-order-link-dialog/product-create-order-link-dialog.component';\nimport { OrderComponent } from './order/order.component';\nimport { OrderDetailDialogComponent } from './order/order-detail-dialog/order-detail-dialog.component';\nimport { OrderVerifyDialogComponent } from './order/order-verify-dialog/order-verify-dialog.component';\nimport { OrderCancelDialogComponent } from './order/order-cancel-dialog/order-cancel-dialog.component';\nimport { OrderCompleteDialogComponent } from './order/order-complete-dialog/order-complete-dialog.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatStepperModule } from '@angular/material/stepper';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    SoftwareSellerComponent,\n    ProductComponent,\n    ProductDetailDialogComponent,\n    ProductDeleteDialogComponent,\n    ProductCreateOrderLinkDialogComponent,\n    OrderComponent,\n    OrderDetailDialogComponent,\n    OrderVerifyDialogComponent,\n    OrderCancelDialogComponent,\n    OrderCompleteDialogComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  entryComponents: [\n    OrderDetailDialogComponent,\n    OrderVerifyDialogComponent,\n    OrderCancelDialogComponent,\n    OrderCompleteDialogComponent,\n    ProductDetailDialogComponent,\n    ProductDeleteDialogComponent,\n    ProductCreateOrderLinkDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SoftwareSellerRoutingModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatListModule,\n    MatTabsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatStepperModule,\n    FlexLayoutModule\n  ],\n  providers: [\n    CdkColumnDef,\n    SoftwareSellerRouterActivate\n  ]\n})\nexport class SoftwareSellerModule { }\n","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { CanActivate } from \"@angular/router\";\n\nimport { SoftwareSellerService } from './software-seller.service';\n\n@Injectable()\nexport class SoftwareSellerRouterActivate implements CanActivate {\n    constructor(\n        private router: Router,\n        public softwareSellerService: SoftwareSellerService\n    ) { }\n\n    public isUserSellerTypeSubscription: any;\n\n    canActivate() {\n        if (localStorage.getItem(\"access_token\") == null) {\n            this.router.navigate([\"/account/login/0\"]);\n            return false;\n        } else {\n            if (localStorage.getItem(\"user_type\") == null) {\n                this.softwareSellerService.getIsSellerUserType();\n                this.isUserSellerTypeSubscription = this.softwareSellerService.isUserSellerObservable.subscribe(\n                    data => {\n                        if (data == true) {\n                            return true;\n                        } else {\n                            this.router.navigate([\"/software-buyer\"]);\n                            return false;\n                        }\n                    }\n                );\n            } else {\n                if (localStorage.getItem(\"user_type\") == \"Seller\") {\n                    return true;\n                } else {\n                    this.router.navigate([\"/software-buyer\"]);\n                    return false;\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.isUserSellerTypeSubscription != null) this.isUserSellerTypeSubscription.unsubscribe();\n    }\n}","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SoftwareSellerService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public isUserSellerTypeSubject = new Subject<boolean>();\n  public isUserSellerObservable = this.isUserSellerTypeSubject.asObservable();\n\n  public getIsSellerUserType(): void {\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstUser/userType\", this.options).subscribe(\n      response => {\n        let results = response;\n        if (results != null) {\n          if (results.toString() == \"Seller\") {\n            this.isUserSellerTypeSubject.next(true);\n          } else {\n            this.isUserSellerTypeSubject.next(false);\n          }\n        } else {\n          this.isUserSellerTypeSubject.next(false);\n        }\n      },\n      error => {\n        this.isUserSellerTypeSubject.next(false);\n      }\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}